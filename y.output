Conflict in state 84 between rule 83 and token NEG resolved as reduce.
Conflict in state 84 between rule 83 and token EGAL resolved as reduce.
Conflict in state 84 between rule 83 and token MAI_MIC resolved as reduce.
Conflict in state 84 between rule 83 and token MIC_EGAL resolved as reduce.
Conflict in state 84 between rule 83 and token MAI_MARE resolved as reduce.
Conflict in state 84 between rule 83 and token MARE_EGAL resolved as reduce.
Conflict in state 84 between rule 83 and token AND resolved as reduce.
Conflict in state 84 between rule 83 and token OR resolved as reduce.
Conflict in state 85 between rule 82 and token NEG resolved as reduce.
Conflict in state 85 between rule 82 and token EGAL resolved as reduce.
Conflict in state 85 between rule 82 and token MAI_MIC resolved as reduce.
Conflict in state 85 between rule 82 and token MIC_EGAL resolved as reduce.
Conflict in state 85 between rule 82 and token MAI_MARE resolved as reduce.
Conflict in state 85 between rule 82 and token MARE_EGAL resolved as reduce.
Conflict in state 85 between rule 82 and token AND resolved as reduce.
Conflict in state 85 between rule 82 and token OR resolved as reduce.
Conflict in state 86 between rule 85 and token NEG resolved as reduce.
Conflict in state 86 between rule 85 and token EGAL resolved as reduce.
Conflict in state 86 between rule 85 and token MAI_MIC resolved as reduce.
Conflict in state 86 between rule 85 and token MIC_EGAL resolved as reduce.
Conflict in state 86 between rule 85 and token MAI_MARE resolved as reduce.
Conflict in state 86 between rule 85 and token MARE_EGAL resolved as reduce.
Conflict in state 86 between rule 85 and token AND resolved as reduce.
Conflict in state 86 between rule 85 and token OR resolved as reduce.
Conflict in state 87 between rule 87 and token NEG resolved as reduce.
Conflict in state 87 between rule 87 and token EGAL resolved as reduce.
Conflict in state 87 between rule 87 and token MAI_MIC resolved as reduce.
Conflict in state 87 between rule 87 and token MIC_EGAL resolved as reduce.
Conflict in state 87 between rule 87 and token MAI_MARE resolved as reduce.
Conflict in state 87 between rule 87 and token MARE_EGAL resolved as reduce.
Conflict in state 87 between rule 87 and token AND resolved as reduce.
Conflict in state 87 between rule 87 and token OR resolved as reduce.
Conflict in state 88 between rule 84 and token NEG resolved as reduce.
Conflict in state 88 between rule 84 and token EGAL resolved as reduce.
Conflict in state 88 between rule 84 and token MAI_MIC resolved as reduce.
Conflict in state 88 between rule 84 and token MIC_EGAL resolved as reduce.
Conflict in state 88 between rule 84 and token MAI_MARE resolved as reduce.
Conflict in state 88 between rule 84 and token MARE_EGAL resolved as reduce.
Conflict in state 88 between rule 84 and token AND resolved as reduce.
Conflict in state 88 between rule 84 and token OR resolved as reduce.
Conflict in state 89 between rule 86 and token NEG resolved as reduce.
Conflict in state 89 between rule 86 and token EGAL resolved as reduce.
Conflict in state 89 between rule 86 and token MAI_MIC resolved as reduce.
Conflict in state 89 between rule 86 and token MIC_EGAL resolved as reduce.
Conflict in state 89 between rule 86 and token MAI_MARE resolved as reduce.
Conflict in state 89 between rule 86 and token MARE_EGAL resolved as reduce.
Conflict in state 89 between rule 86 and token AND resolved as reduce.
Conflict in state 89 between rule 86 and token OR resolved as reduce.
Conflict in state 90 between rule 88 and token NEG resolved as reduce.
Conflict in state 90 between rule 88 and token EGAL resolved as reduce.
Conflict in state 90 between rule 88 and token MAI_MIC resolved as reduce.
Conflict in state 90 between rule 88 and token MIC_EGAL resolved as reduce.
Conflict in state 90 between rule 88 and token MAI_MARE resolved as reduce.
Conflict in state 90 between rule 88 and token MARE_EGAL resolved as reduce.
Conflict in state 90 between rule 88 and token AND resolved as reduce.
Conflict in state 90 between rule 88 and token OR resolved as reduce.
Conflict in state 91 between rule 89 and token NEG resolved as reduce.
Conflict in state 91 between rule 89 and token EGAL resolved as reduce.
Conflict in state 91 between rule 89 and token MAI_MIC resolved as reduce.
Conflict in state 91 between rule 89 and token MIC_EGAL resolved as reduce.
Conflict in state 91 between rule 89 and token MAI_MARE resolved as reduce.
Conflict in state 91 between rule 89 and token MARE_EGAL resolved as reduce.
Conflict in state 91 between rule 89 and token AND resolved as reduce.
Conflict in state 91 between rule 89 and token OR resolved as reduce.
Conflict in state 138 between rule 95 and token '+' resolved as reduce.
Conflict in state 138 between rule 95 and token '-' resolved as reduce.
Conflict in state 138 between rule 95 and token '*' resolved as shift.
Conflict in state 138 between rule 95 and token '/' resolved as shift.
Conflict in state 139 between rule 97 and token '+' resolved as reduce.
Conflict in state 139 between rule 97 and token '-' resolved as reduce.
Conflict in state 139 between rule 97 and token '*' resolved as shift.
Conflict in state 139 between rule 97 and token '/' resolved as shift.
Conflict in state 140 between rule 99 and token '+' resolved as reduce.
Conflict in state 140 between rule 99 and token '-' resolved as reduce.
Conflict in state 140 between rule 99 and token '*' resolved as reduce.
Conflict in state 140 between rule 99 and token '/' resolved as reduce.
Conflict in state 141 between rule 101 and token '+' resolved as reduce.
Conflict in state 141 between rule 101 and token '-' resolved as reduce.
Conflict in state 141 between rule 101 and token '*' resolved as reduce.
Conflict in state 141 between rule 101 and token '/' resolved as reduce.

Grammar
rule 1    startProgram -> global
rule 2    startProgram -> startProgram global
rule 3    global -> tipVar ID ';'
rule 4    @1 ->		/* empty */
rule 5    global -> tipVar ID @1 '@' ASSIGN expresieComplexa ';'
rule 6    @2 ->		/* empty */
rule 7    global -> ID @2 '@' ASSIGN expresieComplexa ';'
rule 8    global -> STRING ID '*' ASSIGN VALOARE_TIP_STRING ';'
rule 9    global -> STRING ID ';'
rule 10   @3 ->		/* empty */
rule 11   global -> tipVar ID_FUNCTIE @3 '(' listaParametriiDF ')' START_FUN bloc END_FUN
rule 12   global -> apelF ';'
rule 13   global -> BOOL ID ';'
rule 14   global -> BOOL ID ':' ASSIGN expresieBool ';'
rule 15   global -> ID ':' ASSIGN expresieBool ';'
rule 16   @4 ->		/* empty */
rule 17   global -> CLASS ID @4 BGIN_CLASS bloc_class END_CLASS ';'
rule 18   global -> ';'
rule 19   bloc_class -> security1 security2 constructor
rule 20   security1 -> SECURE1 START_SECURE1 blocsecureR END_SECURE1
rule 21   security2 -> SECURE2 START_SECURE2 blocsecureR END_SECURE2
rule 22   constructor -> CONSTRUCT '(' listaParametriiDF ')' START_FUN bloc END_FUN
rule 23   blocsecureR -> blocsecureR blocsecure
rule 24   blocsecureR -> blocsecure
rule 25   blocsecure -> tipVar ID ';'
rule 26   @5 ->		/* empty */
rule 27   blocsecure -> tipVar ID @5 '@' ASSIGN expresieComplexa ';'
rule 28   @6 ->		/* empty */
rule 29   blocsecure -> ID @6 '@' ASSIGN expresieComplexa ';'
rule 30   blocsecure -> STRING ID ';'
rule 31   blocsecure -> BOOL ID ';'
rule 32   blocsecure -> BOOL ID ':' ASSIGN expresieBool ';'
rule 33   blocsecure -> ID ':' ASSIGN expresieBool ';'
rule 34   @7 ->		/* empty */
rule 35   blocsecure -> tipVar ID_FUNCTIE @7 '(' listaParametriiDF ')' START_FUN bloc END_FUN
rule 36   bloc -> local
rule 37   bloc -> ifWhileFor
rule 38   bloc -> apelF ';'
rule 39   bloc -> STRCMP ID ',' ID ';'
rule 40   bloc -> STRCPY ID ',' ID ';'
rule 41   bloc -> STRCAT ID ',' ID ';'
rule 42   bloc -> bloc apelF ';'
rule 43   bloc -> bloc local
rule 44   bloc -> bloc ifWhileFor
rule 45   bloc -> bloc STRCMP ID ',' ID ';'
rule 46   bloc -> bloc STRCPY ID ',' ID ';'
rule 47   bloc -> bloc STRCAT ID ',' ID ';'
rule 48   @8 ->		/* empty */
rule 49   apelF -> ID_FUNCTIE @8 '(' ')'
rule 50   @9 ->		/* empty */
rule 51   apelF -> ID_FUNCTIE @9 '#' '(' listaParametriiAF ')'
rule 52   @10 ->		/* empty */
rule 53   listaParametriiAF -> @10 expresieComplexa
rule 54   @11 ->		/* empty */
rule 55   listaParametriiAF -> listaParametriiAF ',' @11 expresieComplexa
rule 56   local -> tipVar ID ';'
rule 57   @12 ->		/* empty */
rule 58   local -> tipVar ID @12 '@' ASSIGN expresieComplexa ';'
rule 59   local -> STRING ID ';'
rule 60   @13 ->		/* empty */
rule 61   local -> ID @13 '@' ASSIGN expresieComplexa ';'
rule 62   local -> BOOL ID ';'
rule 63   local -> BOOL ID ':' ASSIGN expresieBool ';'
rule 64   local -> ID ':' ASSIGN expresieBool ';'
rule 65   @14 ->		/* empty */
rule 66   local -> RETURN @14 '(' expresieComplexa ')' ';'
rule 67   local -> ';'
rule 68   listaParametriiDF ->		/* empty */
rule 69   listaParametriiDF -> tipVar ID
rule 70   listaParametriiDF -> listaParametriiDF ',' tipVar ID
rule 71   listaParametriiDF -> listaParametriiDF ',' BOOL ID
rule 72   ifWhileFor -> instructiuneIf
rule 73   ifWhileFor -> instructiuneWhile
rule 74   ifWhileFor -> instructiuneFor
rule 75   instructiuneIf -> IF '(' expresieBool ')' START bloc END ELSE START bloc END
rule 76   instructiuneIf -> IF '(' expresieBool ')' START bloc END
rule 77   instructiuneWhile -> WHILE '(' expresieBool ')' START bloc END
rule 78   instructiuneFor -> FOR '(' bloc expresieBool ';' bloc ')' START bloc END
rule 79   expresieBool -> VALOARE_TIP_BOOL
rule 80   expresieBool -> ID
rule 81   expresieBool -> VALOARE_NUMERICA
rule 82   expresieBool -> expresieBool EGAL expresieBool
rule 83   expresieBool -> expresieBool NEG expresieBool
rule 84   expresieBool -> expresieBool MAI_MARE expresieBool
rule 85   expresieBool -> expresieBool MAI_MIC expresieBool
rule 86   expresieBool -> expresieBool MARE_EGAL expresieBool
rule 87   expresieBool -> expresieBool MIC_EGAL expresieBool
rule 88   expresieBool -> expresieBool AND expresieBool
rule 89   expresieBool -> expresieBool OR expresieBool
rule 90   expresieBool -> '(' expresieBool ')'
rule 91   expresieComplexa -> VALOARE_NUMERICA
rule 92   expresieComplexa -> ID
rule 93   expresieComplexa -> apelF
rule 94   @15 ->		/* empty */
rule 95   expresieComplexa -> expresieComplexa '+' @15 expresieComplexa
rule 96   @16 ->		/* empty */
rule 97   expresieComplexa -> expresieComplexa '-' @16 expresieComplexa
rule 98   @17 ->		/* empty */
rule 99   expresieComplexa -> expresieComplexa '*' @17 expresieComplexa
rule 100  @18 ->		/* empty */
rule 101  expresieComplexa -> expresieComplexa '/' @18 expresieComplexa
rule 102  @19 ->		/* empty */
rule 103  expresieComplexa -> '(' @19 expresieComplexa ')'
rule 104  tipVar -> INT
rule 105  tipVar -> FLOAT
rule 106  tipVar -> VOID
rule 107  VALOARE_NUMERICA -> INTEGER_VALOARE
rule 108  VALOARE_NUMERICA -> FLOAT_VALOARE
rule 109  VALOARE_TIP_BOOL -> BOOL_VALOARE
rule 110  VALOARE_TIP_STRING -> STRING_VALOARE

Terminals, with rules where they appear

$ (-1)
'#' (35) 51
'(' (40) 11 22 35 49 51 66 75 76 77 78 90 103
')' (41) 11 22 35 49 51 66 75 76 77 78 90 103
'*' (42) 8 99
'+' (43) 95
',' (44) 39 40 41 45 46 47 55 70 71
'-' (45) 97
'/' (47) 101
':' (58) 14 15 32 33 63 64
';' (59) 3 5 7 8 9 12 13 14 15 17 18 25 27 29 30 31 32 33 38 39 40
    41 42 45 46 47 56 58 59 61 62 63 64 66 67 78
'@' (64) 5 7 27 29 58 61
error (256)
STRCMP (258) 39 45
STRCPY (259) 40 46
STRCAT (260) 41 47
RETURN (261) 66
CONSTRUCT (262) 22
CLASS (263) 17
IF (264) 75 76
WHILE (265) 77
FOR (266) 78
ELSE (267) 75
START (268) 75 76 77 78
END (269) 75 76 77 78
START_FUN (270) 11 22 35
END_FUN (271) 11 22 35
BGIN_CLASS (272) 17
END_CLASS (273) 17
SECURE1 (274) 20
SECURE2 (275) 21
START_SECURE1 (276) 20
END_SECURE1 (277) 20
START_SECURE2 (278) 21
END_SECURE2 (279) 21
FLOAT (280) 105
INT (281) 104
VOID (282) 106
ID (283) 3 5 7 8 9 13 14 15 17 25 27 29 30 31 32 33 39 40 41 45 46
    47 56 58 59 61 62 63 64 69 70 71 80 92
ID_FUNCTIE (284) 11 35 49 51
BOOL_VALOARE (285) 109
INTEGER_VALOARE (286) 107
FLOAT_VALOARE (287) 108
BOOL (288) 13 14 31 32 62 63 71
STRING (289) 8 9 30 59
STRING_VALOARE (290) 110
ASSIGN (291) 5 7 8 14 15 27 29 32 33 58 61 63 64
NEG (292) 83
EGAL (293) 82
MAI_MIC (294) 85
MIC_EGAL (295) 87
MAI_MARE (296) 84
MARE_EGAL (297) 86
AND (298) 88
OR (299) 89

Nonterminals, with rules where they appear

startProgram (56)
    on left: 1 2, on right: 2
global (57)
    on left: 3 5 7 8 9 11 12 13 14 15 17 18, on right: 1 2
@1 (58)
    on left: 4, on right: 5
@2 (59)
    on left: 6, on right: 7
@3 (60)
    on left: 10, on right: 11
@4 (61)
    on left: 16, on right: 17
bloc_class (62)
    on left: 19, on right: 17
security1 (63)
    on left: 20, on right: 19
security2 (64)
    on left: 21, on right: 19
constructor (65)
    on left: 22, on right: 19
blocsecureR (66)
    on left: 23 24, on right: 20 21 23
blocsecure (67)
    on left: 25 27 29 30 31 32 33 35, on right: 23 24
@5 (68)
    on left: 26, on right: 27
@6 (69)
    on left: 28, on right: 29
@7 (70)
    on left: 34, on right: 35
bloc (71)
    on left: 36 37 38 39 40 41 42 43 44 45 46 47, on right: 11 22 35
    42 43 44 45 46 47 75 76 77 78
apelF (72)
    on left: 49 51, on right: 12 38 42 93
@8 (73)
    on left: 48, on right: 49
@9 (74)
    on left: 50, on right: 51
listaParametriiAF (75)
    on left: 53 55, on right: 51 55
@10 (76)
    on left: 52, on right: 53
@11 (77)
    on left: 54, on right: 55
local (78)
    on left: 56 58 59 61 62 63 64 66 67, on right: 36 43
@12 (79)
    on left: 57, on right: 58
@13 (80)
    on left: 60, on right: 61
@14 (81)
    on left: 65, on right: 66
listaParametriiDF (82)
    on left: 68 69 70 71, on right: 11 22 35 70 71
ifWhileFor (83)
    on left: 72 73 74, on right: 37 44
instructiuneIf (84)
    on left: 75 76, on right: 72
instructiuneWhile (85)
    on left: 77, on right: 73
instructiuneFor (86)
    on left: 78, on right: 74
expresieBool (87)
    on left: 79 80 81 82 83 84 85 86 87 88 89 90, on right: 14 15 32
    33 63 64 75 76 77 78 82 83 84 85 86 87 88 89 90
expresieComplexa (88)
    on left: 91 92 93 95 97 99 101 103, on right: 5 7 27 29 53 55 58
    61 66 95 97 99 101 103
@15 (89)
    on left: 94, on right: 95
@16 (90)
    on left: 96, on right: 97
@17 (91)
    on left: 98, on right: 99
@18 (92)
    on left: 100, on right: 101
@19 (93)
    on left: 102, on right: 103
tipVar (94)
    on left: 104 105 106, on right: 3 5 11 25 27 35 56 58 69 70
VALOARE_NUMERICA (95)
    on left: 107 108, on right: 81 91
VALOARE_TIP_BOOL (96)
    on left: 109, on right: 79
VALOARE_TIP_STRING (97)
    on left: 110, on right: 8


state 0

    CLASS	shift, and go to state 1
    FLOAT	shift, and go to state 2
    INT 	shift, and go to state 3
    VOID	shift, and go to state 4
    ID  	shift, and go to state 5
    ID_FUNCTIE	shift, and go to state 6
    BOOL	shift, and go to state 7
    STRING	shift, and go to state 8
    ';' 	shift, and go to state 9

    startProgram	go to state 10
    global	go to state 11
    apelF	go to state 12
    tipVar	go to state 13



state 1

    global  ->  CLASS . ID @4 BGIN_CLASS bloc_class END_CLASS ';'   (rule 17)

    ID  	shift, and go to state 14



state 2

    tipVar  ->  FLOAT .   (rule 105)

    $default	reduce using rule 105 (tipVar)



state 3

    tipVar  ->  INT .   (rule 104)

    $default	reduce using rule 104 (tipVar)



state 4

    tipVar  ->  VOID .   (rule 106)

    $default	reduce using rule 106 (tipVar)



state 5

    global  ->  ID . @2 '@' ASSIGN expresieComplexa ';'   (rule 7)
    global  ->  ID . ':' ASSIGN expresieBool ';'   (rule 15)

    ':' 	shift, and go to state 15

    $default	reduce using rule 6 (@2)

    @2  	go to state 16



state 6

    apelF  ->  ID_FUNCTIE . @8 '(' ')'   (rule 49)
    apelF  ->  ID_FUNCTIE . @9 '#' '(' listaParametriiAF ')'   (rule 51)

    $default	reduce using rule 48 (@8)

    @8  	go to state 17
    @9  	go to state 18



state 7

    global  ->  BOOL . ID ';'   (rule 13)
    global  ->  BOOL . ID ':' ASSIGN expresieBool ';'   (rule 14)

    ID  	shift, and go to state 19



state 8

    global  ->  STRING . ID '*' ASSIGN VALOARE_TIP_STRING ';'   (rule 8)
    global  ->  STRING . ID ';'   (rule 9)

    ID  	shift, and go to state 20



state 9

    global  ->  ';' .   (rule 18)

    $default	reduce using rule 18 (global)



state 10

    startProgram  ->  startProgram . global   (rule 2)

    $   	go to state 284
    CLASS	shift, and go to state 1
    FLOAT	shift, and go to state 2
    INT 	shift, and go to state 3
    VOID	shift, and go to state 4
    ID  	shift, and go to state 5
    ID_FUNCTIE	shift, and go to state 6
    BOOL	shift, and go to state 7
    STRING	shift, and go to state 8
    ';' 	shift, and go to state 9

    global	go to state 21
    apelF	go to state 12
    tipVar	go to state 13



state 11

    startProgram  ->  global .   (rule 1)

    $default	reduce using rule 1 (startProgram)



state 12

    global  ->  apelF . ';'   (rule 12)

    ';' 	shift, and go to state 22



state 13

    global  ->  tipVar . ID ';'   (rule 3)
    global  ->  tipVar . ID @1 '@' ASSIGN expresieComplexa ';'   (rule 5)
    global  ->  tipVar . ID_FUNCTIE @3 '(' listaParametriiDF ')' START_FUN bloc END_FUN   (rule 11)

    ID  	shift, and go to state 23
    ID_FUNCTIE	shift, and go to state 24



state 14

    global  ->  CLASS ID . @4 BGIN_CLASS bloc_class END_CLASS ';'   (rule 17)

    $default	reduce using rule 16 (@4)

    @4  	go to state 25



state 15

    global  ->  ID ':' . ASSIGN expresieBool ';'   (rule 15)

    ASSIGN	shift, and go to state 26



state 16

    global  ->  ID @2 . '@' ASSIGN expresieComplexa ';'   (rule 7)

    '@' 	shift, and go to state 27



state 17

    apelF  ->  ID_FUNCTIE @8 . '(' ')'   (rule 49)

    '(' 	shift, and go to state 28



state 18

    apelF  ->  ID_FUNCTIE @9 . '#' '(' listaParametriiAF ')'   (rule 51)

    '#' 	shift, and go to state 29



state 19

    global  ->  BOOL ID . ';'   (rule 13)
    global  ->  BOOL ID . ':' ASSIGN expresieBool ';'   (rule 14)

    ';' 	shift, and go to state 30
    ':' 	shift, and go to state 31



state 20

    global  ->  STRING ID . '*' ASSIGN VALOARE_TIP_STRING ';'   (rule 8)
    global  ->  STRING ID . ';'   (rule 9)

    '*' 	shift, and go to state 32
    ';' 	shift, and go to state 33



state 21

    startProgram  ->  startProgram global .   (rule 2)

    $default	reduce using rule 2 (startProgram)



state 22

    global  ->  apelF ';' .   (rule 12)

    $default	reduce using rule 12 (global)



state 23

    global  ->  tipVar ID . ';'   (rule 3)
    global  ->  tipVar ID . @1 '@' ASSIGN expresieComplexa ';'   (rule 5)

    ';' 	shift, and go to state 34

    $default	reduce using rule 4 (@1)

    @1  	go to state 35



state 24

    global  ->  tipVar ID_FUNCTIE . @3 '(' listaParametriiDF ')' START_FUN bloc END_FUN   (rule 11)

    $default	reduce using rule 10 (@3)

    @3  	go to state 36



state 25

    global  ->  CLASS ID @4 . BGIN_CLASS bloc_class END_CLASS ';'   (rule 17)

    BGIN_CLASS	shift, and go to state 37



state 26

    global  ->  ID ':' ASSIGN . expresieBool ';'   (rule 15)

    ID  	shift, and go to state 38
    BOOL_VALOARE	shift, and go to state 39
    INTEGER_VALOARE	shift, and go to state 40
    FLOAT_VALOARE	shift, and go to state 41
    '(' 	shift, and go to state 42

    expresieBool	go to state 43
    VALOARE_NUMERICA	go to state 44
    VALOARE_TIP_BOOL	go to state 45



state 27

    global  ->  ID @2 '@' . ASSIGN expresieComplexa ';'   (rule 7)

    ASSIGN	shift, and go to state 46



state 28

    apelF  ->  ID_FUNCTIE @8 '(' . ')'   (rule 49)

    ')' 	shift, and go to state 47



state 29

    apelF  ->  ID_FUNCTIE @9 '#' . '(' listaParametriiAF ')'   (rule 51)

    '(' 	shift, and go to state 48



state 30

    global  ->  BOOL ID ';' .   (rule 13)

    $default	reduce using rule 13 (global)



state 31

    global  ->  BOOL ID ':' . ASSIGN expresieBool ';'   (rule 14)

    ASSIGN	shift, and go to state 49



state 32

    global  ->  STRING ID '*' . ASSIGN VALOARE_TIP_STRING ';'   (rule 8)

    ASSIGN	shift, and go to state 50



state 33

    global  ->  STRING ID ';' .   (rule 9)

    $default	reduce using rule 9 (global)



state 34

    global  ->  tipVar ID ';' .   (rule 3)

    $default	reduce using rule 3 (global)



state 35

    global  ->  tipVar ID @1 . '@' ASSIGN expresieComplexa ';'   (rule 5)

    '@' 	shift, and go to state 51



state 36

    global  ->  tipVar ID_FUNCTIE @3 . '(' listaParametriiDF ')' START_FUN bloc END_FUN   (rule 11)

    '(' 	shift, and go to state 52



state 37

    global  ->  CLASS ID @4 BGIN_CLASS . bloc_class END_CLASS ';'   (rule 17)

    SECURE1	shift, and go to state 53

    bloc_class	go to state 54
    security1	go to state 55



state 38

    expresieBool  ->  ID .   (rule 80)

    $default	reduce using rule 80 (expresieBool)



state 39

    VALOARE_TIP_BOOL  ->  BOOL_VALOARE .   (rule 109)

    $default	reduce using rule 109 (VALOARE_TIP_BOOL)



state 40

    VALOARE_NUMERICA  ->  INTEGER_VALOARE .   (rule 107)

    $default	reduce using rule 107 (VALOARE_NUMERICA)



state 41

    VALOARE_NUMERICA  ->  FLOAT_VALOARE .   (rule 108)

    $default	reduce using rule 108 (VALOARE_NUMERICA)



state 42

    expresieBool  ->  '(' . expresieBool ')'   (rule 90)

    ID  	shift, and go to state 38
    BOOL_VALOARE	shift, and go to state 39
    INTEGER_VALOARE	shift, and go to state 40
    FLOAT_VALOARE	shift, and go to state 41
    '(' 	shift, and go to state 42

    expresieBool	go to state 56
    VALOARE_NUMERICA	go to state 44
    VALOARE_TIP_BOOL	go to state 45



state 43

    global  ->  ID ':' ASSIGN expresieBool . ';'   (rule 15)
    expresieBool  ->  expresieBool . EGAL expresieBool   (rule 82)
    expresieBool  ->  expresieBool . NEG expresieBool   (rule 83)
    expresieBool  ->  expresieBool . MAI_MARE expresieBool   (rule 84)
    expresieBool  ->  expresieBool . MAI_MIC expresieBool   (rule 85)
    expresieBool  ->  expresieBool . MARE_EGAL expresieBool   (rule 86)
    expresieBool  ->  expresieBool . MIC_EGAL expresieBool   (rule 87)
    expresieBool  ->  expresieBool . AND expresieBool   (rule 88)
    expresieBool  ->  expresieBool . OR expresieBool   (rule 89)

    NEG 	shift, and go to state 57
    EGAL	shift, and go to state 58
    MAI_MIC	shift, and go to state 59
    MIC_EGAL	shift, and go to state 60
    MAI_MARE	shift, and go to state 61
    MARE_EGAL	shift, and go to state 62
    AND 	shift, and go to state 63
    OR  	shift, and go to state 64
    ';' 	shift, and go to state 65



state 44

    expresieBool  ->  VALOARE_NUMERICA .   (rule 81)

    $default	reduce using rule 81 (expresieBool)



state 45

    expresieBool  ->  VALOARE_TIP_BOOL .   (rule 79)

    $default	reduce using rule 79 (expresieBool)



state 46

    global  ->  ID @2 '@' ASSIGN . expresieComplexa ';'   (rule 7)

    ID  	shift, and go to state 66
    ID_FUNCTIE	shift, and go to state 6
    INTEGER_VALOARE	shift, and go to state 40
    FLOAT_VALOARE	shift, and go to state 41
    '(' 	shift, and go to state 67

    apelF	go to state 68
    expresieComplexa	go to state 69
    VALOARE_NUMERICA	go to state 70



state 47

    apelF  ->  ID_FUNCTIE @8 '(' ')' .   (rule 49)

    $default	reduce using rule 49 (apelF)



state 48

    apelF  ->  ID_FUNCTIE @9 '#' '(' . listaParametriiAF ')'   (rule 51)

    $default	reduce using rule 52 (@10)

    listaParametriiAF	go to state 71
    @10 	go to state 72



state 49

    global  ->  BOOL ID ':' ASSIGN . expresieBool ';'   (rule 14)

    ID  	shift, and go to state 38
    BOOL_VALOARE	shift, and go to state 39
    INTEGER_VALOARE	shift, and go to state 40
    FLOAT_VALOARE	shift, and go to state 41
    '(' 	shift, and go to state 42

    expresieBool	go to state 73
    VALOARE_NUMERICA	go to state 44
    VALOARE_TIP_BOOL	go to state 45



state 50

    global  ->  STRING ID '*' ASSIGN . VALOARE_TIP_STRING ';'   (rule 8)

    STRING_VALOARE	shift, and go to state 74

    VALOARE_TIP_STRING	go to state 75



state 51

    global  ->  tipVar ID @1 '@' . ASSIGN expresieComplexa ';'   (rule 5)

    ASSIGN	shift, and go to state 76



state 52

    global  ->  tipVar ID_FUNCTIE @3 '(' . listaParametriiDF ')' START_FUN bloc END_FUN   (rule 11)

    FLOAT	shift, and go to state 2
    INT 	shift, and go to state 3
    VOID	shift, and go to state 4

    $default	reduce using rule 68 (listaParametriiDF)

    listaParametriiDF	go to state 77
    tipVar	go to state 78



state 53

    security1  ->  SECURE1 . START_SECURE1 blocsecureR END_SECURE1   (rule 20)

    START_SECURE1	shift, and go to state 79



state 54

    global  ->  CLASS ID @4 BGIN_CLASS bloc_class . END_CLASS ';'   (rule 17)

    END_CLASS	shift, and go to state 80



state 55

    bloc_class  ->  security1 . security2 constructor   (rule 19)

    SECURE2	shift, and go to state 81

    security2	go to state 82



state 56

    expresieBool  ->  expresieBool . EGAL expresieBool   (rule 82)
    expresieBool  ->  expresieBool . NEG expresieBool   (rule 83)
    expresieBool  ->  expresieBool . MAI_MARE expresieBool   (rule 84)
    expresieBool  ->  expresieBool . MAI_MIC expresieBool   (rule 85)
    expresieBool  ->  expresieBool . MARE_EGAL expresieBool   (rule 86)
    expresieBool  ->  expresieBool . MIC_EGAL expresieBool   (rule 87)
    expresieBool  ->  expresieBool . AND expresieBool   (rule 88)
    expresieBool  ->  expresieBool . OR expresieBool   (rule 89)
    expresieBool  ->  '(' expresieBool . ')'   (rule 90)

    NEG 	shift, and go to state 57
    EGAL	shift, and go to state 58
    MAI_MIC	shift, and go to state 59
    MIC_EGAL	shift, and go to state 60
    MAI_MARE	shift, and go to state 61
    MARE_EGAL	shift, and go to state 62
    AND 	shift, and go to state 63
    OR  	shift, and go to state 64
    ')' 	shift, and go to state 83



state 57

    expresieBool  ->  expresieBool NEG . expresieBool   (rule 83)

    ID  	shift, and go to state 38
    BOOL_VALOARE	shift, and go to state 39
    INTEGER_VALOARE	shift, and go to state 40
    FLOAT_VALOARE	shift, and go to state 41
    '(' 	shift, and go to state 42

    expresieBool	go to state 84
    VALOARE_NUMERICA	go to state 44
    VALOARE_TIP_BOOL	go to state 45



state 58

    expresieBool  ->  expresieBool EGAL . expresieBool   (rule 82)

    ID  	shift, and go to state 38
    BOOL_VALOARE	shift, and go to state 39
    INTEGER_VALOARE	shift, and go to state 40
    FLOAT_VALOARE	shift, and go to state 41
    '(' 	shift, and go to state 42

    expresieBool	go to state 85
    VALOARE_NUMERICA	go to state 44
    VALOARE_TIP_BOOL	go to state 45



state 59

    expresieBool  ->  expresieBool MAI_MIC . expresieBool   (rule 85)

    ID  	shift, and go to state 38
    BOOL_VALOARE	shift, and go to state 39
    INTEGER_VALOARE	shift, and go to state 40
    FLOAT_VALOARE	shift, and go to state 41
    '(' 	shift, and go to state 42

    expresieBool	go to state 86
    VALOARE_NUMERICA	go to state 44
    VALOARE_TIP_BOOL	go to state 45



state 60

    expresieBool  ->  expresieBool MIC_EGAL . expresieBool   (rule 87)

    ID  	shift, and go to state 38
    BOOL_VALOARE	shift, and go to state 39
    INTEGER_VALOARE	shift, and go to state 40
    FLOAT_VALOARE	shift, and go to state 41
    '(' 	shift, and go to state 42

    expresieBool	go to state 87
    VALOARE_NUMERICA	go to state 44
    VALOARE_TIP_BOOL	go to state 45



state 61

    expresieBool  ->  expresieBool MAI_MARE . expresieBool   (rule 84)

    ID  	shift, and go to state 38
    BOOL_VALOARE	shift, and go to state 39
    INTEGER_VALOARE	shift, and go to state 40
    FLOAT_VALOARE	shift, and go to state 41
    '(' 	shift, and go to state 42

    expresieBool	go to state 88
    VALOARE_NUMERICA	go to state 44
    VALOARE_TIP_BOOL	go to state 45



state 62

    expresieBool  ->  expresieBool MARE_EGAL . expresieBool   (rule 86)

    ID  	shift, and go to state 38
    BOOL_VALOARE	shift, and go to state 39
    INTEGER_VALOARE	shift, and go to state 40
    FLOAT_VALOARE	shift, and go to state 41
    '(' 	shift, and go to state 42

    expresieBool	go to state 89
    VALOARE_NUMERICA	go to state 44
    VALOARE_TIP_BOOL	go to state 45



state 63

    expresieBool  ->  expresieBool AND . expresieBool   (rule 88)

    ID  	shift, and go to state 38
    BOOL_VALOARE	shift, and go to state 39
    INTEGER_VALOARE	shift, and go to state 40
    FLOAT_VALOARE	shift, and go to state 41
    '(' 	shift, and go to state 42

    expresieBool	go to state 90
    VALOARE_NUMERICA	go to state 44
    VALOARE_TIP_BOOL	go to state 45



state 64

    expresieBool  ->  expresieBool OR . expresieBool   (rule 89)

    ID  	shift, and go to state 38
    BOOL_VALOARE	shift, and go to state 39
    INTEGER_VALOARE	shift, and go to state 40
    FLOAT_VALOARE	shift, and go to state 41
    '(' 	shift, and go to state 42

    expresieBool	go to state 91
    VALOARE_NUMERICA	go to state 44
    VALOARE_TIP_BOOL	go to state 45



state 65

    global  ->  ID ':' ASSIGN expresieBool ';' .   (rule 15)

    $default	reduce using rule 15 (global)



state 66

    expresieComplexa  ->  ID .   (rule 92)

    $default	reduce using rule 92 (expresieComplexa)



state 67

    expresieComplexa  ->  '(' . @19 expresieComplexa ')'   (rule 103)

    $default	reduce using rule 102 (@19)

    @19 	go to state 92



state 68

    expresieComplexa  ->  apelF .   (rule 93)

    $default	reduce using rule 93 (expresieComplexa)



state 69

    global  ->  ID @2 '@' ASSIGN expresieComplexa . ';'   (rule 7)
    expresieComplexa  ->  expresieComplexa . '+' @15 expresieComplexa   (rule 95)
    expresieComplexa  ->  expresieComplexa . '-' @16 expresieComplexa   (rule 97)
    expresieComplexa  ->  expresieComplexa . '*' @17 expresieComplexa   (rule 99)
    expresieComplexa  ->  expresieComplexa . '/' @18 expresieComplexa   (rule 101)

    '+' 	shift, and go to state 93
    '-' 	shift, and go to state 94
    '*' 	shift, and go to state 95
    '/' 	shift, and go to state 96
    ';' 	shift, and go to state 97



state 70

    expresieComplexa  ->  VALOARE_NUMERICA .   (rule 91)

    $default	reduce using rule 91 (expresieComplexa)



state 71

    apelF  ->  ID_FUNCTIE @9 '#' '(' listaParametriiAF . ')'   (rule 51)
    listaParametriiAF  ->  listaParametriiAF . ',' @11 expresieComplexa   (rule 55)

    ')' 	shift, and go to state 98
    ',' 	shift, and go to state 99



state 72

    listaParametriiAF  ->  @10 . expresieComplexa   (rule 53)

    ID  	shift, and go to state 66
    ID_FUNCTIE	shift, and go to state 6
    INTEGER_VALOARE	shift, and go to state 40
    FLOAT_VALOARE	shift, and go to state 41
    '(' 	shift, and go to state 67

    apelF	go to state 68
    expresieComplexa	go to state 100
    VALOARE_NUMERICA	go to state 70



state 73

    global  ->  BOOL ID ':' ASSIGN expresieBool . ';'   (rule 14)
    expresieBool  ->  expresieBool . EGAL expresieBool   (rule 82)
    expresieBool  ->  expresieBool . NEG expresieBool   (rule 83)
    expresieBool  ->  expresieBool . MAI_MARE expresieBool   (rule 84)
    expresieBool  ->  expresieBool . MAI_MIC expresieBool   (rule 85)
    expresieBool  ->  expresieBool . MARE_EGAL expresieBool   (rule 86)
    expresieBool  ->  expresieBool . MIC_EGAL expresieBool   (rule 87)
    expresieBool  ->  expresieBool . AND expresieBool   (rule 88)
    expresieBool  ->  expresieBool . OR expresieBool   (rule 89)

    NEG 	shift, and go to state 57
    EGAL	shift, and go to state 58
    MAI_MIC	shift, and go to state 59
    MIC_EGAL	shift, and go to state 60
    MAI_MARE	shift, and go to state 61
    MARE_EGAL	shift, and go to state 62
    AND 	shift, and go to state 63
    OR  	shift, and go to state 64
    ';' 	shift, and go to state 101



state 74

    VALOARE_TIP_STRING  ->  STRING_VALOARE .   (rule 110)

    $default	reduce using rule 110 (VALOARE_TIP_STRING)



state 75

    global  ->  STRING ID '*' ASSIGN VALOARE_TIP_STRING . ';'   (rule 8)

    ';' 	shift, and go to state 102



state 76

    global  ->  tipVar ID @1 '@' ASSIGN . expresieComplexa ';'   (rule 5)

    ID  	shift, and go to state 66
    ID_FUNCTIE	shift, and go to state 6
    INTEGER_VALOARE	shift, and go to state 40
    FLOAT_VALOARE	shift, and go to state 41
    '(' 	shift, and go to state 67

    apelF	go to state 68
    expresieComplexa	go to state 103
    VALOARE_NUMERICA	go to state 70



state 77

    global  ->  tipVar ID_FUNCTIE @3 '(' listaParametriiDF . ')' START_FUN bloc END_FUN   (rule 11)
    listaParametriiDF  ->  listaParametriiDF . ',' tipVar ID   (rule 70)
    listaParametriiDF  ->  listaParametriiDF . ',' BOOL ID   (rule 71)

    ')' 	shift, and go to state 104
    ',' 	shift, and go to state 105



state 78

    listaParametriiDF  ->  tipVar . ID   (rule 69)

    ID  	shift, and go to state 106



state 79

    security1  ->  SECURE1 START_SECURE1 . blocsecureR END_SECURE1   (rule 20)

    FLOAT	shift, and go to state 2
    INT 	shift, and go to state 3
    VOID	shift, and go to state 4
    ID  	shift, and go to state 107
    BOOL	shift, and go to state 108
    STRING	shift, and go to state 109

    blocsecureR	go to state 110
    blocsecure	go to state 111
    tipVar	go to state 112



state 80

    global  ->  CLASS ID @4 BGIN_CLASS bloc_class END_CLASS . ';'   (rule 17)

    ';' 	shift, and go to state 113



state 81

    security2  ->  SECURE2 . START_SECURE2 blocsecureR END_SECURE2   (rule 21)

    START_SECURE2	shift, and go to state 114



state 82

    bloc_class  ->  security1 security2 . constructor   (rule 19)

    CONSTRUCT	shift, and go to state 115

    constructor	go to state 116



state 83

    expresieBool  ->  '(' expresieBool ')' .   (rule 90)

    $default	reduce using rule 90 (expresieBool)



state 84

    expresieBool  ->  expresieBool . EGAL expresieBool   (rule 82)
    expresieBool  ->  expresieBool . NEG expresieBool   (rule 83)
    expresieBool  ->  expresieBool NEG expresieBool .   (rule 83)
    expresieBool  ->  expresieBool . MAI_MARE expresieBool   (rule 84)
    expresieBool  ->  expresieBool . MAI_MIC expresieBool   (rule 85)
    expresieBool  ->  expresieBool . MARE_EGAL expresieBool   (rule 86)
    expresieBool  ->  expresieBool . MIC_EGAL expresieBool   (rule 87)
    expresieBool  ->  expresieBool . AND expresieBool   (rule 88)
    expresieBool  ->  expresieBool . OR expresieBool   (rule 89)


    $default	reduce using rule 83 (expresieBool)



state 85

    expresieBool  ->  expresieBool . EGAL expresieBool   (rule 82)
    expresieBool  ->  expresieBool EGAL expresieBool .   (rule 82)
    expresieBool  ->  expresieBool . NEG expresieBool   (rule 83)
    expresieBool  ->  expresieBool . MAI_MARE expresieBool   (rule 84)
    expresieBool  ->  expresieBool . MAI_MIC expresieBool   (rule 85)
    expresieBool  ->  expresieBool . MARE_EGAL expresieBool   (rule 86)
    expresieBool  ->  expresieBool . MIC_EGAL expresieBool   (rule 87)
    expresieBool  ->  expresieBool . AND expresieBool   (rule 88)
    expresieBool  ->  expresieBool . OR expresieBool   (rule 89)


    $default	reduce using rule 82 (expresieBool)



state 86

    expresieBool  ->  expresieBool . EGAL expresieBool   (rule 82)
    expresieBool  ->  expresieBool . NEG expresieBool   (rule 83)
    expresieBool  ->  expresieBool . MAI_MARE expresieBool   (rule 84)
    expresieBool  ->  expresieBool . MAI_MIC expresieBool   (rule 85)
    expresieBool  ->  expresieBool MAI_MIC expresieBool .   (rule 85)
    expresieBool  ->  expresieBool . MARE_EGAL expresieBool   (rule 86)
    expresieBool  ->  expresieBool . MIC_EGAL expresieBool   (rule 87)
    expresieBool  ->  expresieBool . AND expresieBool   (rule 88)
    expresieBool  ->  expresieBool . OR expresieBool   (rule 89)


    $default	reduce using rule 85 (expresieBool)



state 87

    expresieBool  ->  expresieBool . EGAL expresieBool   (rule 82)
    expresieBool  ->  expresieBool . NEG expresieBool   (rule 83)
    expresieBool  ->  expresieBool . MAI_MARE expresieBool   (rule 84)
    expresieBool  ->  expresieBool . MAI_MIC expresieBool   (rule 85)
    expresieBool  ->  expresieBool . MARE_EGAL expresieBool   (rule 86)
    expresieBool  ->  expresieBool . MIC_EGAL expresieBool   (rule 87)
    expresieBool  ->  expresieBool MIC_EGAL expresieBool .   (rule 87)
    expresieBool  ->  expresieBool . AND expresieBool   (rule 88)
    expresieBool  ->  expresieBool . OR expresieBool   (rule 89)


    $default	reduce using rule 87 (expresieBool)



state 88

    expresieBool  ->  expresieBool . EGAL expresieBool   (rule 82)
    expresieBool  ->  expresieBool . NEG expresieBool   (rule 83)
    expresieBool  ->  expresieBool . MAI_MARE expresieBool   (rule 84)
    expresieBool  ->  expresieBool MAI_MARE expresieBool .   (rule 84)
    expresieBool  ->  expresieBool . MAI_MIC expresieBool   (rule 85)
    expresieBool  ->  expresieBool . MARE_EGAL expresieBool   (rule 86)
    expresieBool  ->  expresieBool . MIC_EGAL expresieBool   (rule 87)
    expresieBool  ->  expresieBool . AND expresieBool   (rule 88)
    expresieBool  ->  expresieBool . OR expresieBool   (rule 89)


    $default	reduce using rule 84 (expresieBool)



state 89

    expresieBool  ->  expresieBool . EGAL expresieBool   (rule 82)
    expresieBool  ->  expresieBool . NEG expresieBool   (rule 83)
    expresieBool  ->  expresieBool . MAI_MARE expresieBool   (rule 84)
    expresieBool  ->  expresieBool . MAI_MIC expresieBool   (rule 85)
    expresieBool  ->  expresieBool . MARE_EGAL expresieBool   (rule 86)
    expresieBool  ->  expresieBool MARE_EGAL expresieBool .   (rule 86)
    expresieBool  ->  expresieBool . MIC_EGAL expresieBool   (rule 87)
    expresieBool  ->  expresieBool . AND expresieBool   (rule 88)
    expresieBool  ->  expresieBool . OR expresieBool   (rule 89)


    $default	reduce using rule 86 (expresieBool)



state 90

    expresieBool  ->  expresieBool . EGAL expresieBool   (rule 82)
    expresieBool  ->  expresieBool . NEG expresieBool   (rule 83)
    expresieBool  ->  expresieBool . MAI_MARE expresieBool   (rule 84)
    expresieBool  ->  expresieBool . MAI_MIC expresieBool   (rule 85)
    expresieBool  ->  expresieBool . MARE_EGAL expresieBool   (rule 86)
    expresieBool  ->  expresieBool . MIC_EGAL expresieBool   (rule 87)
    expresieBool  ->  expresieBool . AND expresieBool   (rule 88)
    expresieBool  ->  expresieBool AND expresieBool .   (rule 88)
    expresieBool  ->  expresieBool . OR expresieBool   (rule 89)


    $default	reduce using rule 88 (expresieBool)



state 91

    expresieBool  ->  expresieBool . EGAL expresieBool   (rule 82)
    expresieBool  ->  expresieBool . NEG expresieBool   (rule 83)
    expresieBool  ->  expresieBool . MAI_MARE expresieBool   (rule 84)
    expresieBool  ->  expresieBool . MAI_MIC expresieBool   (rule 85)
    expresieBool  ->  expresieBool . MARE_EGAL expresieBool   (rule 86)
    expresieBool  ->  expresieBool . MIC_EGAL expresieBool   (rule 87)
    expresieBool  ->  expresieBool . AND expresieBool   (rule 88)
    expresieBool  ->  expresieBool . OR expresieBool   (rule 89)
    expresieBool  ->  expresieBool OR expresieBool .   (rule 89)


    $default	reduce using rule 89 (expresieBool)



state 92

    expresieComplexa  ->  '(' @19 . expresieComplexa ')'   (rule 103)

    ID  	shift, and go to state 66
    ID_FUNCTIE	shift, and go to state 6
    INTEGER_VALOARE	shift, and go to state 40
    FLOAT_VALOARE	shift, and go to state 41
    '(' 	shift, and go to state 67

    apelF	go to state 68
    expresieComplexa	go to state 117
    VALOARE_NUMERICA	go to state 70



state 93

    expresieComplexa  ->  expresieComplexa '+' . @15 expresieComplexa   (rule 95)

    $default	reduce using rule 94 (@15)

    @15 	go to state 118



state 94

    expresieComplexa  ->  expresieComplexa '-' . @16 expresieComplexa   (rule 97)

    $default	reduce using rule 96 (@16)

    @16 	go to state 119



state 95

    expresieComplexa  ->  expresieComplexa '*' . @17 expresieComplexa   (rule 99)

    $default	reduce using rule 98 (@17)

    @17 	go to state 120



state 96

    expresieComplexa  ->  expresieComplexa '/' . @18 expresieComplexa   (rule 101)

    $default	reduce using rule 100 (@18)

    @18 	go to state 121



state 97

    global  ->  ID @2 '@' ASSIGN expresieComplexa ';' .   (rule 7)

    $default	reduce using rule 7 (global)



state 98

    apelF  ->  ID_FUNCTIE @9 '#' '(' listaParametriiAF ')' .   (rule 51)

    $default	reduce using rule 51 (apelF)



state 99

    listaParametriiAF  ->  listaParametriiAF ',' . @11 expresieComplexa   (rule 55)

    $default	reduce using rule 54 (@11)

    @11 	go to state 122



state 100

    listaParametriiAF  ->  @10 expresieComplexa .   (rule 53)
    expresieComplexa  ->  expresieComplexa . '+' @15 expresieComplexa   (rule 95)
    expresieComplexa  ->  expresieComplexa . '-' @16 expresieComplexa   (rule 97)
    expresieComplexa  ->  expresieComplexa . '*' @17 expresieComplexa   (rule 99)
    expresieComplexa  ->  expresieComplexa . '/' @18 expresieComplexa   (rule 101)

    '+' 	shift, and go to state 93
    '-' 	shift, and go to state 94
    '*' 	shift, and go to state 95
    '/' 	shift, and go to state 96

    $default	reduce using rule 53 (listaParametriiAF)



state 101

    global  ->  BOOL ID ':' ASSIGN expresieBool ';' .   (rule 14)

    $default	reduce using rule 14 (global)



state 102

    global  ->  STRING ID '*' ASSIGN VALOARE_TIP_STRING ';' .   (rule 8)

    $default	reduce using rule 8 (global)



state 103

    global  ->  tipVar ID @1 '@' ASSIGN expresieComplexa . ';'   (rule 5)
    expresieComplexa  ->  expresieComplexa . '+' @15 expresieComplexa   (rule 95)
    expresieComplexa  ->  expresieComplexa . '-' @16 expresieComplexa   (rule 97)
    expresieComplexa  ->  expresieComplexa . '*' @17 expresieComplexa   (rule 99)
    expresieComplexa  ->  expresieComplexa . '/' @18 expresieComplexa   (rule 101)

    '+' 	shift, and go to state 93
    '-' 	shift, and go to state 94
    '*' 	shift, and go to state 95
    '/' 	shift, and go to state 96
    ';' 	shift, and go to state 123



state 104

    global  ->  tipVar ID_FUNCTIE @3 '(' listaParametriiDF ')' . START_FUN bloc END_FUN   (rule 11)

    START_FUN	shift, and go to state 124



state 105

    listaParametriiDF  ->  listaParametriiDF ',' . tipVar ID   (rule 70)
    listaParametriiDF  ->  listaParametriiDF ',' . BOOL ID   (rule 71)

    FLOAT	shift, and go to state 2
    INT 	shift, and go to state 3
    VOID	shift, and go to state 4
    BOOL	shift, and go to state 125

    tipVar	go to state 126



state 106

    listaParametriiDF  ->  tipVar ID .   (rule 69)

    $default	reduce using rule 69 (listaParametriiDF)



state 107

    blocsecure  ->  ID . @6 '@' ASSIGN expresieComplexa ';'   (rule 29)
    blocsecure  ->  ID . ':' ASSIGN expresieBool ';'   (rule 33)

    ':' 	shift, and go to state 127

    $default	reduce using rule 28 (@6)

    @6  	go to state 128



state 108

    blocsecure  ->  BOOL . ID ';'   (rule 31)
    blocsecure  ->  BOOL . ID ':' ASSIGN expresieBool ';'   (rule 32)

    ID  	shift, and go to state 129



state 109

    blocsecure  ->  STRING . ID ';'   (rule 30)

    ID  	shift, and go to state 130



state 110

    security1  ->  SECURE1 START_SECURE1 blocsecureR . END_SECURE1   (rule 20)
    blocsecureR  ->  blocsecureR . blocsecure   (rule 23)

    END_SECURE1	shift, and go to state 131
    FLOAT	shift, and go to state 2
    INT 	shift, and go to state 3
    VOID	shift, and go to state 4
    ID  	shift, and go to state 107
    BOOL	shift, and go to state 108
    STRING	shift, and go to state 109

    blocsecure	go to state 132
    tipVar	go to state 112



state 111

    blocsecureR  ->  blocsecure .   (rule 24)

    $default	reduce using rule 24 (blocsecureR)



state 112

    blocsecure  ->  tipVar . ID ';'   (rule 25)
    blocsecure  ->  tipVar . ID @5 '@' ASSIGN expresieComplexa ';'   (rule 27)
    blocsecure  ->  tipVar . ID_FUNCTIE @7 '(' listaParametriiDF ')' START_FUN bloc END_FUN   (rule 35)

    ID  	shift, and go to state 133
    ID_FUNCTIE	shift, and go to state 134



state 113

    global  ->  CLASS ID @4 BGIN_CLASS bloc_class END_CLASS ';' .   (rule 17)

    $default	reduce using rule 17 (global)



state 114

    security2  ->  SECURE2 START_SECURE2 . blocsecureR END_SECURE2   (rule 21)

    FLOAT	shift, and go to state 2
    INT 	shift, and go to state 3
    VOID	shift, and go to state 4
    ID  	shift, and go to state 107
    BOOL	shift, and go to state 108
    STRING	shift, and go to state 109

    blocsecureR	go to state 135
    blocsecure	go to state 111
    tipVar	go to state 112



state 115

    constructor  ->  CONSTRUCT . '(' listaParametriiDF ')' START_FUN bloc END_FUN   (rule 22)

    '(' 	shift, and go to state 136



state 116

    bloc_class  ->  security1 security2 constructor .   (rule 19)

    $default	reduce using rule 19 (bloc_class)



state 117

    expresieComplexa  ->  expresieComplexa . '+' @15 expresieComplexa   (rule 95)
    expresieComplexa  ->  expresieComplexa . '-' @16 expresieComplexa   (rule 97)
    expresieComplexa  ->  expresieComplexa . '*' @17 expresieComplexa   (rule 99)
    expresieComplexa  ->  expresieComplexa . '/' @18 expresieComplexa   (rule 101)
    expresieComplexa  ->  '(' @19 expresieComplexa . ')'   (rule 103)

    '+' 	shift, and go to state 93
    '-' 	shift, and go to state 94
    '*' 	shift, and go to state 95
    '/' 	shift, and go to state 96
    ')' 	shift, and go to state 137



state 118

    expresieComplexa  ->  expresieComplexa '+' @15 . expresieComplexa   (rule 95)

    ID  	shift, and go to state 66
    ID_FUNCTIE	shift, and go to state 6
    INTEGER_VALOARE	shift, and go to state 40
    FLOAT_VALOARE	shift, and go to state 41
    '(' 	shift, and go to state 67

    apelF	go to state 68
    expresieComplexa	go to state 138
    VALOARE_NUMERICA	go to state 70



state 119

    expresieComplexa  ->  expresieComplexa '-' @16 . expresieComplexa   (rule 97)

    ID  	shift, and go to state 66
    ID_FUNCTIE	shift, and go to state 6
    INTEGER_VALOARE	shift, and go to state 40
    FLOAT_VALOARE	shift, and go to state 41
    '(' 	shift, and go to state 67

    apelF	go to state 68
    expresieComplexa	go to state 139
    VALOARE_NUMERICA	go to state 70



state 120

    expresieComplexa  ->  expresieComplexa '*' @17 . expresieComplexa   (rule 99)

    ID  	shift, and go to state 66
    ID_FUNCTIE	shift, and go to state 6
    INTEGER_VALOARE	shift, and go to state 40
    FLOAT_VALOARE	shift, and go to state 41
    '(' 	shift, and go to state 67

    apelF	go to state 68
    expresieComplexa	go to state 140
    VALOARE_NUMERICA	go to state 70



state 121

    expresieComplexa  ->  expresieComplexa '/' @18 . expresieComplexa   (rule 101)

    ID  	shift, and go to state 66
    ID_FUNCTIE	shift, and go to state 6
    INTEGER_VALOARE	shift, and go to state 40
    FLOAT_VALOARE	shift, and go to state 41
    '(' 	shift, and go to state 67

    apelF	go to state 68
    expresieComplexa	go to state 141
    VALOARE_NUMERICA	go to state 70



state 122

    listaParametriiAF  ->  listaParametriiAF ',' @11 . expresieComplexa   (rule 55)

    ID  	shift, and go to state 66
    ID_FUNCTIE	shift, and go to state 6
    INTEGER_VALOARE	shift, and go to state 40
    FLOAT_VALOARE	shift, and go to state 41
    '(' 	shift, and go to state 67

    apelF	go to state 68
    expresieComplexa	go to state 142
    VALOARE_NUMERICA	go to state 70



state 123

    global  ->  tipVar ID @1 '@' ASSIGN expresieComplexa ';' .   (rule 5)

    $default	reduce using rule 5 (global)



state 124

    global  ->  tipVar ID_FUNCTIE @3 '(' listaParametriiDF ')' START_FUN . bloc END_FUN   (rule 11)

    STRCMP	shift, and go to state 143
    STRCPY	shift, and go to state 144
    STRCAT	shift, and go to state 145
    RETURN	shift, and go to state 146
    IF  	shift, and go to state 147
    WHILE	shift, and go to state 148
    FOR 	shift, and go to state 149
    FLOAT	shift, and go to state 2
    INT 	shift, and go to state 3
    VOID	shift, and go to state 4
    ID  	shift, and go to state 150
    ID_FUNCTIE	shift, and go to state 6
    BOOL	shift, and go to state 151
    STRING	shift, and go to state 152
    ';' 	shift, and go to state 153

    bloc	go to state 154
    apelF	go to state 155
    local	go to state 156
    ifWhileFor	go to state 157
    instructiuneIf	go to state 158
    instructiuneWhile	go to state 159
    instructiuneFor	go to state 160
    tipVar	go to state 161



state 125

    listaParametriiDF  ->  listaParametriiDF ',' BOOL . ID   (rule 71)

    ID  	shift, and go to state 162



state 126

    listaParametriiDF  ->  listaParametriiDF ',' tipVar . ID   (rule 70)

    ID  	shift, and go to state 163



state 127

    blocsecure  ->  ID ':' . ASSIGN expresieBool ';'   (rule 33)

    ASSIGN	shift, and go to state 164



state 128

    blocsecure  ->  ID @6 . '@' ASSIGN expresieComplexa ';'   (rule 29)

    '@' 	shift, and go to state 165



state 129

    blocsecure  ->  BOOL ID . ';'   (rule 31)
    blocsecure  ->  BOOL ID . ':' ASSIGN expresieBool ';'   (rule 32)

    ';' 	shift, and go to state 166
    ':' 	shift, and go to state 167



state 130

    blocsecure  ->  STRING ID . ';'   (rule 30)

    ';' 	shift, and go to state 168



state 131

    security1  ->  SECURE1 START_SECURE1 blocsecureR END_SECURE1 .   (rule 20)

    $default	reduce using rule 20 (security1)



state 132

    blocsecureR  ->  blocsecureR blocsecure .   (rule 23)

    $default	reduce using rule 23 (blocsecureR)



state 133

    blocsecure  ->  tipVar ID . ';'   (rule 25)
    blocsecure  ->  tipVar ID . @5 '@' ASSIGN expresieComplexa ';'   (rule 27)

    ';' 	shift, and go to state 169

    $default	reduce using rule 26 (@5)

    @5  	go to state 170



state 134

    blocsecure  ->  tipVar ID_FUNCTIE . @7 '(' listaParametriiDF ')' START_FUN bloc END_FUN   (rule 35)

    $default	reduce using rule 34 (@7)

    @7  	go to state 171



state 135

    security2  ->  SECURE2 START_SECURE2 blocsecureR . END_SECURE2   (rule 21)
    blocsecureR  ->  blocsecureR . blocsecure   (rule 23)

    END_SECURE2	shift, and go to state 172
    FLOAT	shift, and go to state 2
    INT 	shift, and go to state 3
    VOID	shift, and go to state 4
    ID  	shift, and go to state 107
    BOOL	shift, and go to state 108
    STRING	shift, and go to state 109

    blocsecure	go to state 132
    tipVar	go to state 112



state 136

    constructor  ->  CONSTRUCT '(' . listaParametriiDF ')' START_FUN bloc END_FUN   (rule 22)

    FLOAT	shift, and go to state 2
    INT 	shift, and go to state 3
    VOID	shift, and go to state 4

    $default	reduce using rule 68 (listaParametriiDF)

    listaParametriiDF	go to state 173
    tipVar	go to state 78



state 137

    expresieComplexa  ->  '(' @19 expresieComplexa ')' .   (rule 103)

    $default	reduce using rule 103 (expresieComplexa)



state 138

    expresieComplexa  ->  expresieComplexa . '+' @15 expresieComplexa   (rule 95)
    expresieComplexa  ->  expresieComplexa '+' @15 expresieComplexa .   (rule 95)
    expresieComplexa  ->  expresieComplexa . '-' @16 expresieComplexa   (rule 97)
    expresieComplexa  ->  expresieComplexa . '*' @17 expresieComplexa   (rule 99)
    expresieComplexa  ->  expresieComplexa . '/' @18 expresieComplexa   (rule 101)

    '*' 	shift, and go to state 95
    '/' 	shift, and go to state 96

    $default	reduce using rule 95 (expresieComplexa)



state 139

    expresieComplexa  ->  expresieComplexa . '+' @15 expresieComplexa   (rule 95)
    expresieComplexa  ->  expresieComplexa . '-' @16 expresieComplexa   (rule 97)
    expresieComplexa  ->  expresieComplexa '-' @16 expresieComplexa .   (rule 97)
    expresieComplexa  ->  expresieComplexa . '*' @17 expresieComplexa   (rule 99)
    expresieComplexa  ->  expresieComplexa . '/' @18 expresieComplexa   (rule 101)

    '*' 	shift, and go to state 95
    '/' 	shift, and go to state 96

    $default	reduce using rule 97 (expresieComplexa)



state 140

    expresieComplexa  ->  expresieComplexa . '+' @15 expresieComplexa   (rule 95)
    expresieComplexa  ->  expresieComplexa . '-' @16 expresieComplexa   (rule 97)
    expresieComplexa  ->  expresieComplexa . '*' @17 expresieComplexa   (rule 99)
    expresieComplexa  ->  expresieComplexa '*' @17 expresieComplexa .   (rule 99)
    expresieComplexa  ->  expresieComplexa . '/' @18 expresieComplexa   (rule 101)


    $default	reduce using rule 99 (expresieComplexa)



state 141

    expresieComplexa  ->  expresieComplexa . '+' @15 expresieComplexa   (rule 95)
    expresieComplexa  ->  expresieComplexa . '-' @16 expresieComplexa   (rule 97)
    expresieComplexa  ->  expresieComplexa . '*' @17 expresieComplexa   (rule 99)
    expresieComplexa  ->  expresieComplexa . '/' @18 expresieComplexa   (rule 101)
    expresieComplexa  ->  expresieComplexa '/' @18 expresieComplexa .   (rule 101)


    $default	reduce using rule 101 (expresieComplexa)



state 142

    listaParametriiAF  ->  listaParametriiAF ',' @11 expresieComplexa .   (rule 55)
    expresieComplexa  ->  expresieComplexa . '+' @15 expresieComplexa   (rule 95)
    expresieComplexa  ->  expresieComplexa . '-' @16 expresieComplexa   (rule 97)
    expresieComplexa  ->  expresieComplexa . '*' @17 expresieComplexa   (rule 99)
    expresieComplexa  ->  expresieComplexa . '/' @18 expresieComplexa   (rule 101)

    '+' 	shift, and go to state 93
    '-' 	shift, and go to state 94
    '*' 	shift, and go to state 95
    '/' 	shift, and go to state 96

    $default	reduce using rule 55 (listaParametriiAF)



state 143

    bloc  ->  STRCMP . ID ',' ID ';'   (rule 39)

    ID  	shift, and go to state 174



state 144

    bloc  ->  STRCPY . ID ',' ID ';'   (rule 40)

    ID  	shift, and go to state 175



state 145

    bloc  ->  STRCAT . ID ',' ID ';'   (rule 41)

    ID  	shift, and go to state 176



state 146

    local  ->  RETURN . @14 '(' expresieComplexa ')' ';'   (rule 66)

    $default	reduce using rule 65 (@14)

    @14 	go to state 177



state 147

    instructiuneIf  ->  IF . '(' expresieBool ')' START bloc END ELSE START bloc END   (rule 75)
    instructiuneIf  ->  IF . '(' expresieBool ')' START bloc END   (rule 76)

    '(' 	shift, and go to state 178



state 148

    instructiuneWhile  ->  WHILE . '(' expresieBool ')' START bloc END   (rule 77)

    '(' 	shift, and go to state 179



state 149

    instructiuneFor  ->  FOR . '(' bloc expresieBool ';' bloc ')' START bloc END   (rule 78)

    '(' 	shift, and go to state 180



state 150

    local  ->  ID . @13 '@' ASSIGN expresieComplexa ';'   (rule 61)
    local  ->  ID . ':' ASSIGN expresieBool ';'   (rule 64)

    ':' 	shift, and go to state 181

    $default	reduce using rule 60 (@13)

    @13 	go to state 182



state 151

    local  ->  BOOL . ID ';'   (rule 62)
    local  ->  BOOL . ID ':' ASSIGN expresieBool ';'   (rule 63)

    ID  	shift, and go to state 183



state 152

    local  ->  STRING . ID ';'   (rule 59)

    ID  	shift, and go to state 184



state 153

    local  ->  ';' .   (rule 67)

    $default	reduce using rule 67 (local)



state 154

    global  ->  tipVar ID_FUNCTIE @3 '(' listaParametriiDF ')' START_FUN bloc . END_FUN   (rule 11)
    bloc  ->  bloc . apelF ';'   (rule 42)
    bloc  ->  bloc . local   (rule 43)
    bloc  ->  bloc . ifWhileFor   (rule 44)
    bloc  ->  bloc . STRCMP ID ',' ID ';'   (rule 45)
    bloc  ->  bloc . STRCPY ID ',' ID ';'   (rule 46)
    bloc  ->  bloc . STRCAT ID ',' ID ';'   (rule 47)

    STRCMP	shift, and go to state 185
    STRCPY	shift, and go to state 186
    STRCAT	shift, and go to state 187
    RETURN	shift, and go to state 146
    IF  	shift, and go to state 147
    WHILE	shift, and go to state 148
    FOR 	shift, and go to state 149
    END_FUN	shift, and go to state 188
    FLOAT	shift, and go to state 2
    INT 	shift, and go to state 3
    VOID	shift, and go to state 4
    ID  	shift, and go to state 150
    ID_FUNCTIE	shift, and go to state 6
    BOOL	shift, and go to state 151
    STRING	shift, and go to state 152
    ';' 	shift, and go to state 153

    apelF	go to state 189
    local	go to state 190
    ifWhileFor	go to state 191
    instructiuneIf	go to state 158
    instructiuneWhile	go to state 159
    instructiuneFor	go to state 160
    tipVar	go to state 161



state 155

    bloc  ->  apelF . ';'   (rule 38)

    ';' 	shift, and go to state 192



state 156

    bloc  ->  local .   (rule 36)

    $default	reduce using rule 36 (bloc)



state 157

    bloc  ->  ifWhileFor .   (rule 37)

    $default	reduce using rule 37 (bloc)



state 158

    ifWhileFor  ->  instructiuneIf .   (rule 72)

    $default	reduce using rule 72 (ifWhileFor)



state 159

    ifWhileFor  ->  instructiuneWhile .   (rule 73)

    $default	reduce using rule 73 (ifWhileFor)



state 160

    ifWhileFor  ->  instructiuneFor .   (rule 74)

    $default	reduce using rule 74 (ifWhileFor)



state 161

    local  ->  tipVar . ID ';'   (rule 56)
    local  ->  tipVar . ID @12 '@' ASSIGN expresieComplexa ';'   (rule 58)

    ID  	shift, and go to state 193



state 162

    listaParametriiDF  ->  listaParametriiDF ',' BOOL ID .   (rule 71)

    $default	reduce using rule 71 (listaParametriiDF)



state 163

    listaParametriiDF  ->  listaParametriiDF ',' tipVar ID .   (rule 70)

    $default	reduce using rule 70 (listaParametriiDF)



state 164

    blocsecure  ->  ID ':' ASSIGN . expresieBool ';'   (rule 33)

    ID  	shift, and go to state 38
    BOOL_VALOARE	shift, and go to state 39
    INTEGER_VALOARE	shift, and go to state 40
    FLOAT_VALOARE	shift, and go to state 41
    '(' 	shift, and go to state 42

    expresieBool	go to state 194
    VALOARE_NUMERICA	go to state 44
    VALOARE_TIP_BOOL	go to state 45



state 165

    blocsecure  ->  ID @6 '@' . ASSIGN expresieComplexa ';'   (rule 29)

    ASSIGN	shift, and go to state 195



state 166

    blocsecure  ->  BOOL ID ';' .   (rule 31)

    $default	reduce using rule 31 (blocsecure)



state 167

    blocsecure  ->  BOOL ID ':' . ASSIGN expresieBool ';'   (rule 32)

    ASSIGN	shift, and go to state 196



state 168

    blocsecure  ->  STRING ID ';' .   (rule 30)

    $default	reduce using rule 30 (blocsecure)



state 169

    blocsecure  ->  tipVar ID ';' .   (rule 25)

    $default	reduce using rule 25 (blocsecure)



state 170

    blocsecure  ->  tipVar ID @5 . '@' ASSIGN expresieComplexa ';'   (rule 27)

    '@' 	shift, and go to state 197



state 171

    blocsecure  ->  tipVar ID_FUNCTIE @7 . '(' listaParametriiDF ')' START_FUN bloc END_FUN   (rule 35)

    '(' 	shift, and go to state 198



state 172

    security2  ->  SECURE2 START_SECURE2 blocsecureR END_SECURE2 .   (rule 21)

    $default	reduce using rule 21 (security2)



state 173

    constructor  ->  CONSTRUCT '(' listaParametriiDF . ')' START_FUN bloc END_FUN   (rule 22)
    listaParametriiDF  ->  listaParametriiDF . ',' tipVar ID   (rule 70)
    listaParametriiDF  ->  listaParametriiDF . ',' BOOL ID   (rule 71)

    ')' 	shift, and go to state 199
    ',' 	shift, and go to state 105



state 174

    bloc  ->  STRCMP ID . ',' ID ';'   (rule 39)

    ',' 	shift, and go to state 200



state 175

    bloc  ->  STRCPY ID . ',' ID ';'   (rule 40)

    ',' 	shift, and go to state 201



state 176

    bloc  ->  STRCAT ID . ',' ID ';'   (rule 41)

    ',' 	shift, and go to state 202



state 177

    local  ->  RETURN @14 . '(' expresieComplexa ')' ';'   (rule 66)

    '(' 	shift, and go to state 203



state 178

    instructiuneIf  ->  IF '(' . expresieBool ')' START bloc END ELSE START bloc END   (rule 75)
    instructiuneIf  ->  IF '(' . expresieBool ')' START bloc END   (rule 76)

    ID  	shift, and go to state 38
    BOOL_VALOARE	shift, and go to state 39
    INTEGER_VALOARE	shift, and go to state 40
    FLOAT_VALOARE	shift, and go to state 41
    '(' 	shift, and go to state 42

    expresieBool	go to state 204
    VALOARE_NUMERICA	go to state 44
    VALOARE_TIP_BOOL	go to state 45



state 179

    instructiuneWhile  ->  WHILE '(' . expresieBool ')' START bloc END   (rule 77)

    ID  	shift, and go to state 38
    BOOL_VALOARE	shift, and go to state 39
    INTEGER_VALOARE	shift, and go to state 40
    FLOAT_VALOARE	shift, and go to state 41
    '(' 	shift, and go to state 42

    expresieBool	go to state 205
    VALOARE_NUMERICA	go to state 44
    VALOARE_TIP_BOOL	go to state 45



state 180

    instructiuneFor  ->  FOR '(' . bloc expresieBool ';' bloc ')' START bloc END   (rule 78)

    STRCMP	shift, and go to state 143
    STRCPY	shift, and go to state 144
    STRCAT	shift, and go to state 145
    RETURN	shift, and go to state 146
    IF  	shift, and go to state 147
    WHILE	shift, and go to state 148
    FOR 	shift, and go to state 149
    FLOAT	shift, and go to state 2
    INT 	shift, and go to state 3
    VOID	shift, and go to state 4
    ID  	shift, and go to state 150
    ID_FUNCTIE	shift, and go to state 6
    BOOL	shift, and go to state 151
    STRING	shift, and go to state 152
    ';' 	shift, and go to state 153

    bloc	go to state 206
    apelF	go to state 155
    local	go to state 156
    ifWhileFor	go to state 157
    instructiuneIf	go to state 158
    instructiuneWhile	go to state 159
    instructiuneFor	go to state 160
    tipVar	go to state 161



state 181

    local  ->  ID ':' . ASSIGN expresieBool ';'   (rule 64)

    ASSIGN	shift, and go to state 207



state 182

    local  ->  ID @13 . '@' ASSIGN expresieComplexa ';'   (rule 61)

    '@' 	shift, and go to state 208



state 183

    local  ->  BOOL ID . ';'   (rule 62)
    local  ->  BOOL ID . ':' ASSIGN expresieBool ';'   (rule 63)

    ';' 	shift, and go to state 209
    ':' 	shift, and go to state 210



state 184

    local  ->  STRING ID . ';'   (rule 59)

    ';' 	shift, and go to state 211



state 185

    bloc  ->  bloc STRCMP . ID ',' ID ';'   (rule 45)

    ID  	shift, and go to state 212



state 186

    bloc  ->  bloc STRCPY . ID ',' ID ';'   (rule 46)

    ID  	shift, and go to state 213



state 187

    bloc  ->  bloc STRCAT . ID ',' ID ';'   (rule 47)

    ID  	shift, and go to state 214



state 188

    global  ->  tipVar ID_FUNCTIE @3 '(' listaParametriiDF ')' START_FUN bloc END_FUN .   (rule 11)

    $default	reduce using rule 11 (global)



state 189

    bloc  ->  bloc apelF . ';'   (rule 42)

    ';' 	shift, and go to state 215



state 190

    bloc  ->  bloc local .   (rule 43)

    $default	reduce using rule 43 (bloc)



state 191

    bloc  ->  bloc ifWhileFor .   (rule 44)

    $default	reduce using rule 44 (bloc)



state 192

    bloc  ->  apelF ';' .   (rule 38)

    $default	reduce using rule 38 (bloc)



state 193

    local  ->  tipVar ID . ';'   (rule 56)
    local  ->  tipVar ID . @12 '@' ASSIGN expresieComplexa ';'   (rule 58)

    ';' 	shift, and go to state 216

    $default	reduce using rule 57 (@12)

    @12 	go to state 217



state 194

    blocsecure  ->  ID ':' ASSIGN expresieBool . ';'   (rule 33)
    expresieBool  ->  expresieBool . EGAL expresieBool   (rule 82)
    expresieBool  ->  expresieBool . NEG expresieBool   (rule 83)
    expresieBool  ->  expresieBool . MAI_MARE expresieBool   (rule 84)
    expresieBool  ->  expresieBool . MAI_MIC expresieBool   (rule 85)
    expresieBool  ->  expresieBool . MARE_EGAL expresieBool   (rule 86)
    expresieBool  ->  expresieBool . MIC_EGAL expresieBool   (rule 87)
    expresieBool  ->  expresieBool . AND expresieBool   (rule 88)
    expresieBool  ->  expresieBool . OR expresieBool   (rule 89)

    NEG 	shift, and go to state 57
    EGAL	shift, and go to state 58
    MAI_MIC	shift, and go to state 59
    MIC_EGAL	shift, and go to state 60
    MAI_MARE	shift, and go to state 61
    MARE_EGAL	shift, and go to state 62
    AND 	shift, and go to state 63
    OR  	shift, and go to state 64
    ';' 	shift, and go to state 218



state 195

    blocsecure  ->  ID @6 '@' ASSIGN . expresieComplexa ';'   (rule 29)

    ID  	shift, and go to state 66
    ID_FUNCTIE	shift, and go to state 6
    INTEGER_VALOARE	shift, and go to state 40
    FLOAT_VALOARE	shift, and go to state 41
    '(' 	shift, and go to state 67

    apelF	go to state 68
    expresieComplexa	go to state 219
    VALOARE_NUMERICA	go to state 70



state 196

    blocsecure  ->  BOOL ID ':' ASSIGN . expresieBool ';'   (rule 32)

    ID  	shift, and go to state 38
    BOOL_VALOARE	shift, and go to state 39
    INTEGER_VALOARE	shift, and go to state 40
    FLOAT_VALOARE	shift, and go to state 41
    '(' 	shift, and go to state 42

    expresieBool	go to state 220
    VALOARE_NUMERICA	go to state 44
    VALOARE_TIP_BOOL	go to state 45



state 197

    blocsecure  ->  tipVar ID @5 '@' . ASSIGN expresieComplexa ';'   (rule 27)

    ASSIGN	shift, and go to state 221



state 198

    blocsecure  ->  tipVar ID_FUNCTIE @7 '(' . listaParametriiDF ')' START_FUN bloc END_FUN   (rule 35)

    FLOAT	shift, and go to state 2
    INT 	shift, and go to state 3
    VOID	shift, and go to state 4

    $default	reduce using rule 68 (listaParametriiDF)

    listaParametriiDF	go to state 222
    tipVar	go to state 78



state 199

    constructor  ->  CONSTRUCT '(' listaParametriiDF ')' . START_FUN bloc END_FUN   (rule 22)

    START_FUN	shift, and go to state 223



state 200

    bloc  ->  STRCMP ID ',' . ID ';'   (rule 39)

    ID  	shift, and go to state 224



state 201

    bloc  ->  STRCPY ID ',' . ID ';'   (rule 40)

    ID  	shift, and go to state 225



state 202

    bloc  ->  STRCAT ID ',' . ID ';'   (rule 41)

    ID  	shift, and go to state 226



state 203

    local  ->  RETURN @14 '(' . expresieComplexa ')' ';'   (rule 66)

    ID  	shift, and go to state 66
    ID_FUNCTIE	shift, and go to state 6
    INTEGER_VALOARE	shift, and go to state 40
    FLOAT_VALOARE	shift, and go to state 41
    '(' 	shift, and go to state 67

    apelF	go to state 68
    expresieComplexa	go to state 227
    VALOARE_NUMERICA	go to state 70



state 204

    instructiuneIf  ->  IF '(' expresieBool . ')' START bloc END ELSE START bloc END   (rule 75)
    instructiuneIf  ->  IF '(' expresieBool . ')' START bloc END   (rule 76)
    expresieBool  ->  expresieBool . EGAL expresieBool   (rule 82)
    expresieBool  ->  expresieBool . NEG expresieBool   (rule 83)
    expresieBool  ->  expresieBool . MAI_MARE expresieBool   (rule 84)
    expresieBool  ->  expresieBool . MAI_MIC expresieBool   (rule 85)
    expresieBool  ->  expresieBool . MARE_EGAL expresieBool   (rule 86)
    expresieBool  ->  expresieBool . MIC_EGAL expresieBool   (rule 87)
    expresieBool  ->  expresieBool . AND expresieBool   (rule 88)
    expresieBool  ->  expresieBool . OR expresieBool   (rule 89)

    NEG 	shift, and go to state 57
    EGAL	shift, and go to state 58
    MAI_MIC	shift, and go to state 59
    MIC_EGAL	shift, and go to state 60
    MAI_MARE	shift, and go to state 61
    MARE_EGAL	shift, and go to state 62
    AND 	shift, and go to state 63
    OR  	shift, and go to state 64
    ')' 	shift, and go to state 228



state 205

    instructiuneWhile  ->  WHILE '(' expresieBool . ')' START bloc END   (rule 77)
    expresieBool  ->  expresieBool . EGAL expresieBool   (rule 82)
    expresieBool  ->  expresieBool . NEG expresieBool   (rule 83)
    expresieBool  ->  expresieBool . MAI_MARE expresieBool   (rule 84)
    expresieBool  ->  expresieBool . MAI_MIC expresieBool   (rule 85)
    expresieBool  ->  expresieBool . MARE_EGAL expresieBool   (rule 86)
    expresieBool  ->  expresieBool . MIC_EGAL expresieBool   (rule 87)
    expresieBool  ->  expresieBool . AND expresieBool   (rule 88)
    expresieBool  ->  expresieBool . OR expresieBool   (rule 89)

    NEG 	shift, and go to state 57
    EGAL	shift, and go to state 58
    MAI_MIC	shift, and go to state 59
    MIC_EGAL	shift, and go to state 60
    MAI_MARE	shift, and go to state 61
    MARE_EGAL	shift, and go to state 62
    AND 	shift, and go to state 63
    OR  	shift, and go to state 64
    ')' 	shift, and go to state 229



state 206

    bloc  ->  bloc . apelF ';'   (rule 42)
    bloc  ->  bloc . local   (rule 43)
    bloc  ->  bloc . ifWhileFor   (rule 44)
    bloc  ->  bloc . STRCMP ID ',' ID ';'   (rule 45)
    bloc  ->  bloc . STRCPY ID ',' ID ';'   (rule 46)
    bloc  ->  bloc . STRCAT ID ',' ID ';'   (rule 47)
    instructiuneFor  ->  FOR '(' bloc . expresieBool ';' bloc ')' START bloc END   (rule 78)

    STRCMP	shift, and go to state 185
    STRCPY	shift, and go to state 186
    STRCAT	shift, and go to state 187
    RETURN	shift, and go to state 146
    IF  	shift, and go to state 147
    WHILE	shift, and go to state 148
    FOR 	shift, and go to state 149
    FLOAT	shift, and go to state 2
    INT 	shift, and go to state 3
    VOID	shift, and go to state 4
    ID  	shift, and go to state 230
    ID_FUNCTIE	shift, and go to state 6
    BOOL_VALOARE	shift, and go to state 39
    INTEGER_VALOARE	shift, and go to state 40
    FLOAT_VALOARE	shift, and go to state 41
    BOOL	shift, and go to state 151
    STRING	shift, and go to state 152
    ';' 	shift, and go to state 153
    '(' 	shift, and go to state 42

    apelF	go to state 189
    local	go to state 190
    ifWhileFor	go to state 191
    instructiuneIf	go to state 158
    instructiuneWhile	go to state 159
    instructiuneFor	go to state 160
    expresieBool	go to state 231
    tipVar	go to state 161
    VALOARE_NUMERICA	go to state 44
    VALOARE_TIP_BOOL	go to state 45



state 207

    local  ->  ID ':' ASSIGN . expresieBool ';'   (rule 64)

    ID  	shift, and go to state 38
    BOOL_VALOARE	shift, and go to state 39
    INTEGER_VALOARE	shift, and go to state 40
    FLOAT_VALOARE	shift, and go to state 41
    '(' 	shift, and go to state 42

    expresieBool	go to state 232
    VALOARE_NUMERICA	go to state 44
    VALOARE_TIP_BOOL	go to state 45



state 208

    local  ->  ID @13 '@' . ASSIGN expresieComplexa ';'   (rule 61)

    ASSIGN	shift, and go to state 233



state 209

    local  ->  BOOL ID ';' .   (rule 62)

    $default	reduce using rule 62 (local)



state 210

    local  ->  BOOL ID ':' . ASSIGN expresieBool ';'   (rule 63)

    ASSIGN	shift, and go to state 234



state 211

    local  ->  STRING ID ';' .   (rule 59)

    $default	reduce using rule 59 (local)



state 212

    bloc  ->  bloc STRCMP ID . ',' ID ';'   (rule 45)

    ',' 	shift, and go to state 235



state 213

    bloc  ->  bloc STRCPY ID . ',' ID ';'   (rule 46)

    ',' 	shift, and go to state 236



state 214

    bloc  ->  bloc STRCAT ID . ',' ID ';'   (rule 47)

    ',' 	shift, and go to state 237



state 215

    bloc  ->  bloc apelF ';' .   (rule 42)

    $default	reduce using rule 42 (bloc)



state 216

    local  ->  tipVar ID ';' .   (rule 56)

    $default	reduce using rule 56 (local)



state 217

    local  ->  tipVar ID @12 . '@' ASSIGN expresieComplexa ';'   (rule 58)

    '@' 	shift, and go to state 238



state 218

    blocsecure  ->  ID ':' ASSIGN expresieBool ';' .   (rule 33)

    $default	reduce using rule 33 (blocsecure)



state 219

    blocsecure  ->  ID @6 '@' ASSIGN expresieComplexa . ';'   (rule 29)
    expresieComplexa  ->  expresieComplexa . '+' @15 expresieComplexa   (rule 95)
    expresieComplexa  ->  expresieComplexa . '-' @16 expresieComplexa   (rule 97)
    expresieComplexa  ->  expresieComplexa . '*' @17 expresieComplexa   (rule 99)
    expresieComplexa  ->  expresieComplexa . '/' @18 expresieComplexa   (rule 101)

    '+' 	shift, and go to state 93
    '-' 	shift, and go to state 94
    '*' 	shift, and go to state 95
    '/' 	shift, and go to state 96
    ';' 	shift, and go to state 239



state 220

    blocsecure  ->  BOOL ID ':' ASSIGN expresieBool . ';'   (rule 32)
    expresieBool  ->  expresieBool . EGAL expresieBool   (rule 82)
    expresieBool  ->  expresieBool . NEG expresieBool   (rule 83)
    expresieBool  ->  expresieBool . MAI_MARE expresieBool   (rule 84)
    expresieBool  ->  expresieBool . MAI_MIC expresieBool   (rule 85)
    expresieBool  ->  expresieBool . MARE_EGAL expresieBool   (rule 86)
    expresieBool  ->  expresieBool . MIC_EGAL expresieBool   (rule 87)
    expresieBool  ->  expresieBool . AND expresieBool   (rule 88)
    expresieBool  ->  expresieBool . OR expresieBool   (rule 89)

    NEG 	shift, and go to state 57
    EGAL	shift, and go to state 58
    MAI_MIC	shift, and go to state 59
    MIC_EGAL	shift, and go to state 60
    MAI_MARE	shift, and go to state 61
    MARE_EGAL	shift, and go to state 62
    AND 	shift, and go to state 63
    OR  	shift, and go to state 64
    ';' 	shift, and go to state 240



state 221

    blocsecure  ->  tipVar ID @5 '@' ASSIGN . expresieComplexa ';'   (rule 27)

    ID  	shift, and go to state 66
    ID_FUNCTIE	shift, and go to state 6
    INTEGER_VALOARE	shift, and go to state 40
    FLOAT_VALOARE	shift, and go to state 41
    '(' 	shift, and go to state 67

    apelF	go to state 68
    expresieComplexa	go to state 241
    VALOARE_NUMERICA	go to state 70



state 222

    blocsecure  ->  tipVar ID_FUNCTIE @7 '(' listaParametriiDF . ')' START_FUN bloc END_FUN   (rule 35)
    listaParametriiDF  ->  listaParametriiDF . ',' tipVar ID   (rule 70)
    listaParametriiDF  ->  listaParametriiDF . ',' BOOL ID   (rule 71)

    ')' 	shift, and go to state 242
    ',' 	shift, and go to state 105



state 223

    constructor  ->  CONSTRUCT '(' listaParametriiDF ')' START_FUN . bloc END_FUN   (rule 22)

    STRCMP	shift, and go to state 143
    STRCPY	shift, and go to state 144
    STRCAT	shift, and go to state 145
    RETURN	shift, and go to state 146
    IF  	shift, and go to state 147
    WHILE	shift, and go to state 148
    FOR 	shift, and go to state 149
    FLOAT	shift, and go to state 2
    INT 	shift, and go to state 3
    VOID	shift, and go to state 4
    ID  	shift, and go to state 150
    ID_FUNCTIE	shift, and go to state 6
    BOOL	shift, and go to state 151
    STRING	shift, and go to state 152
    ';' 	shift, and go to state 153

    bloc	go to state 243
    apelF	go to state 155
    local	go to state 156
    ifWhileFor	go to state 157
    instructiuneIf	go to state 158
    instructiuneWhile	go to state 159
    instructiuneFor	go to state 160
    tipVar	go to state 161



state 224

    bloc  ->  STRCMP ID ',' ID . ';'   (rule 39)

    ';' 	shift, and go to state 244



state 225

    bloc  ->  STRCPY ID ',' ID . ';'   (rule 40)

    ';' 	shift, and go to state 245



state 226

    bloc  ->  STRCAT ID ',' ID . ';'   (rule 41)

    ';' 	shift, and go to state 246



state 227

    local  ->  RETURN @14 '(' expresieComplexa . ')' ';'   (rule 66)
    expresieComplexa  ->  expresieComplexa . '+' @15 expresieComplexa   (rule 95)
    expresieComplexa  ->  expresieComplexa . '-' @16 expresieComplexa   (rule 97)
    expresieComplexa  ->  expresieComplexa . '*' @17 expresieComplexa   (rule 99)
    expresieComplexa  ->  expresieComplexa . '/' @18 expresieComplexa   (rule 101)

    '+' 	shift, and go to state 93
    '-' 	shift, and go to state 94
    '*' 	shift, and go to state 95
    '/' 	shift, and go to state 96
    ')' 	shift, and go to state 247



state 228

    instructiuneIf  ->  IF '(' expresieBool ')' . START bloc END ELSE START bloc END   (rule 75)
    instructiuneIf  ->  IF '(' expresieBool ')' . START bloc END   (rule 76)

    START	shift, and go to state 248



state 229

    instructiuneWhile  ->  WHILE '(' expresieBool ')' . START bloc END   (rule 77)

    START	shift, and go to state 249



state 230

    local  ->  ID . @13 '@' ASSIGN expresieComplexa ';'   (rule 61)
    local  ->  ID . ':' ASSIGN expresieBool ';'   (rule 64)
    expresieBool  ->  ID .   (rule 80)

    ':' 	shift, and go to state 181

    $default	reduce using rule 80 (expresieBool)

    @13 	go to state 182



state 231

    instructiuneFor  ->  FOR '(' bloc expresieBool . ';' bloc ')' START bloc END   (rule 78)
    expresieBool  ->  expresieBool . EGAL expresieBool   (rule 82)
    expresieBool  ->  expresieBool . NEG expresieBool   (rule 83)
    expresieBool  ->  expresieBool . MAI_MARE expresieBool   (rule 84)
    expresieBool  ->  expresieBool . MAI_MIC expresieBool   (rule 85)
    expresieBool  ->  expresieBool . MARE_EGAL expresieBool   (rule 86)
    expresieBool  ->  expresieBool . MIC_EGAL expresieBool   (rule 87)
    expresieBool  ->  expresieBool . AND expresieBool   (rule 88)
    expresieBool  ->  expresieBool . OR expresieBool   (rule 89)

    NEG 	shift, and go to state 57
    EGAL	shift, and go to state 58
    MAI_MIC	shift, and go to state 59
    MIC_EGAL	shift, and go to state 60
    MAI_MARE	shift, and go to state 61
    MARE_EGAL	shift, and go to state 62
    AND 	shift, and go to state 63
    OR  	shift, and go to state 64
    ';' 	shift, and go to state 250



state 232

    local  ->  ID ':' ASSIGN expresieBool . ';'   (rule 64)
    expresieBool  ->  expresieBool . EGAL expresieBool   (rule 82)
    expresieBool  ->  expresieBool . NEG expresieBool   (rule 83)
    expresieBool  ->  expresieBool . MAI_MARE expresieBool   (rule 84)
    expresieBool  ->  expresieBool . MAI_MIC expresieBool   (rule 85)
    expresieBool  ->  expresieBool . MARE_EGAL expresieBool   (rule 86)
    expresieBool  ->  expresieBool . MIC_EGAL expresieBool   (rule 87)
    expresieBool  ->  expresieBool . AND expresieBool   (rule 88)
    expresieBool  ->  expresieBool . OR expresieBool   (rule 89)

    NEG 	shift, and go to state 57
    EGAL	shift, and go to state 58
    MAI_MIC	shift, and go to state 59
    MIC_EGAL	shift, and go to state 60
    MAI_MARE	shift, and go to state 61
    MARE_EGAL	shift, and go to state 62
    AND 	shift, and go to state 63
    OR  	shift, and go to state 64
    ';' 	shift, and go to state 251



state 233

    local  ->  ID @13 '@' ASSIGN . expresieComplexa ';'   (rule 61)

    ID  	shift, and go to state 66
    ID_FUNCTIE	shift, and go to state 6
    INTEGER_VALOARE	shift, and go to state 40
    FLOAT_VALOARE	shift, and go to state 41
    '(' 	shift, and go to state 67

    apelF	go to state 68
    expresieComplexa	go to state 252
    VALOARE_NUMERICA	go to state 70



state 234

    local  ->  BOOL ID ':' ASSIGN . expresieBool ';'   (rule 63)

    ID  	shift, and go to state 38
    BOOL_VALOARE	shift, and go to state 39
    INTEGER_VALOARE	shift, and go to state 40
    FLOAT_VALOARE	shift, and go to state 41
    '(' 	shift, and go to state 42

    expresieBool	go to state 253
    VALOARE_NUMERICA	go to state 44
    VALOARE_TIP_BOOL	go to state 45



state 235

    bloc  ->  bloc STRCMP ID ',' . ID ';'   (rule 45)

    ID  	shift, and go to state 254



state 236

    bloc  ->  bloc STRCPY ID ',' . ID ';'   (rule 46)

    ID  	shift, and go to state 255



state 237

    bloc  ->  bloc STRCAT ID ',' . ID ';'   (rule 47)

    ID  	shift, and go to state 256



state 238

    local  ->  tipVar ID @12 '@' . ASSIGN expresieComplexa ';'   (rule 58)

    ASSIGN	shift, and go to state 257



state 239

    blocsecure  ->  ID @6 '@' ASSIGN expresieComplexa ';' .   (rule 29)

    $default	reduce using rule 29 (blocsecure)



state 240

    blocsecure  ->  BOOL ID ':' ASSIGN expresieBool ';' .   (rule 32)

    $default	reduce using rule 32 (blocsecure)



state 241

    blocsecure  ->  tipVar ID @5 '@' ASSIGN expresieComplexa . ';'   (rule 27)
    expresieComplexa  ->  expresieComplexa . '+' @15 expresieComplexa   (rule 95)
    expresieComplexa  ->  expresieComplexa . '-' @16 expresieComplexa   (rule 97)
    expresieComplexa  ->  expresieComplexa . '*' @17 expresieComplexa   (rule 99)
    expresieComplexa  ->  expresieComplexa . '/' @18 expresieComplexa   (rule 101)

    '+' 	shift, and go to state 93
    '-' 	shift, and go to state 94
    '*' 	shift, and go to state 95
    '/' 	shift, and go to state 96
    ';' 	shift, and go to state 258



state 242

    blocsecure  ->  tipVar ID_FUNCTIE @7 '(' listaParametriiDF ')' . START_FUN bloc END_FUN   (rule 35)

    START_FUN	shift, and go to state 259



state 243

    constructor  ->  CONSTRUCT '(' listaParametriiDF ')' START_FUN bloc . END_FUN   (rule 22)
    bloc  ->  bloc . apelF ';'   (rule 42)
    bloc  ->  bloc . local   (rule 43)
    bloc  ->  bloc . ifWhileFor   (rule 44)
    bloc  ->  bloc . STRCMP ID ',' ID ';'   (rule 45)
    bloc  ->  bloc . STRCPY ID ',' ID ';'   (rule 46)
    bloc  ->  bloc . STRCAT ID ',' ID ';'   (rule 47)

    STRCMP	shift, and go to state 185
    STRCPY	shift, and go to state 186
    STRCAT	shift, and go to state 187
    RETURN	shift, and go to state 146
    IF  	shift, and go to state 147
    WHILE	shift, and go to state 148
    FOR 	shift, and go to state 149
    END_FUN	shift, and go to state 260
    FLOAT	shift, and go to state 2
    INT 	shift, and go to state 3
    VOID	shift, and go to state 4
    ID  	shift, and go to state 150
    ID_FUNCTIE	shift, and go to state 6
    BOOL	shift, and go to state 151
    STRING	shift, and go to state 152
    ';' 	shift, and go to state 153

    apelF	go to state 189
    local	go to state 190
    ifWhileFor	go to state 191
    instructiuneIf	go to state 158
    instructiuneWhile	go to state 159
    instructiuneFor	go to state 160
    tipVar	go to state 161



state 244

    bloc  ->  STRCMP ID ',' ID ';' .   (rule 39)

    $default	reduce using rule 39 (bloc)



state 245

    bloc  ->  STRCPY ID ',' ID ';' .   (rule 40)

    $default	reduce using rule 40 (bloc)



state 246

    bloc  ->  STRCAT ID ',' ID ';' .   (rule 41)

    $default	reduce using rule 41 (bloc)



state 247

    local  ->  RETURN @14 '(' expresieComplexa ')' . ';'   (rule 66)

    ';' 	shift, and go to state 261



state 248

    instructiuneIf  ->  IF '(' expresieBool ')' START . bloc END ELSE START bloc END   (rule 75)
    instructiuneIf  ->  IF '(' expresieBool ')' START . bloc END   (rule 76)

    STRCMP	shift, and go to state 143
    STRCPY	shift, and go to state 144
    STRCAT	shift, and go to state 145
    RETURN	shift, and go to state 146
    IF  	shift, and go to state 147
    WHILE	shift, and go to state 148
    FOR 	shift, and go to state 149
    FLOAT	shift, and go to state 2
    INT 	shift, and go to state 3
    VOID	shift, and go to state 4
    ID  	shift, and go to state 150
    ID_FUNCTIE	shift, and go to state 6
    BOOL	shift, and go to state 151
    STRING	shift, and go to state 152
    ';' 	shift, and go to state 153

    bloc	go to state 262
    apelF	go to state 155
    local	go to state 156
    ifWhileFor	go to state 157
    instructiuneIf	go to state 158
    instructiuneWhile	go to state 159
    instructiuneFor	go to state 160
    tipVar	go to state 161



state 249

    instructiuneWhile  ->  WHILE '(' expresieBool ')' START . bloc END   (rule 77)

    STRCMP	shift, and go to state 143
    STRCPY	shift, and go to state 144
    STRCAT	shift, and go to state 145
    RETURN	shift, and go to state 146
    IF  	shift, and go to state 147
    WHILE	shift, and go to state 148
    FOR 	shift, and go to state 149
    FLOAT	shift, and go to state 2
    INT 	shift, and go to state 3
    VOID	shift, and go to state 4
    ID  	shift, and go to state 150
    ID_FUNCTIE	shift, and go to state 6
    BOOL	shift, and go to state 151
    STRING	shift, and go to state 152
    ';' 	shift, and go to state 153

    bloc	go to state 263
    apelF	go to state 155
    local	go to state 156
    ifWhileFor	go to state 157
    instructiuneIf	go to state 158
    instructiuneWhile	go to state 159
    instructiuneFor	go to state 160
    tipVar	go to state 161



state 250

    instructiuneFor  ->  FOR '(' bloc expresieBool ';' . bloc ')' START bloc END   (rule 78)

    STRCMP	shift, and go to state 143
    STRCPY	shift, and go to state 144
    STRCAT	shift, and go to state 145
    RETURN	shift, and go to state 146
    IF  	shift, and go to state 147
    WHILE	shift, and go to state 148
    FOR 	shift, and go to state 149
    FLOAT	shift, and go to state 2
    INT 	shift, and go to state 3
    VOID	shift, and go to state 4
    ID  	shift, and go to state 150
    ID_FUNCTIE	shift, and go to state 6
    BOOL	shift, and go to state 151
    STRING	shift, and go to state 152
    ';' 	shift, and go to state 153

    bloc	go to state 264
    apelF	go to state 155
    local	go to state 156
    ifWhileFor	go to state 157
    instructiuneIf	go to state 158
    instructiuneWhile	go to state 159
    instructiuneFor	go to state 160
    tipVar	go to state 161



state 251

    local  ->  ID ':' ASSIGN expresieBool ';' .   (rule 64)

    $default	reduce using rule 64 (local)



state 252

    local  ->  ID @13 '@' ASSIGN expresieComplexa . ';'   (rule 61)
    expresieComplexa  ->  expresieComplexa . '+' @15 expresieComplexa   (rule 95)
    expresieComplexa  ->  expresieComplexa . '-' @16 expresieComplexa   (rule 97)
    expresieComplexa  ->  expresieComplexa . '*' @17 expresieComplexa   (rule 99)
    expresieComplexa  ->  expresieComplexa . '/' @18 expresieComplexa   (rule 101)

    '+' 	shift, and go to state 93
    '-' 	shift, and go to state 94
    '*' 	shift, and go to state 95
    '/' 	shift, and go to state 96
    ';' 	shift, and go to state 265



state 253

    local  ->  BOOL ID ':' ASSIGN expresieBool . ';'   (rule 63)
    expresieBool  ->  expresieBool . EGAL expresieBool   (rule 82)
    expresieBool  ->  expresieBool . NEG expresieBool   (rule 83)
    expresieBool  ->  expresieBool . MAI_MARE expresieBool   (rule 84)
    expresieBool  ->  expresieBool . MAI_MIC expresieBool   (rule 85)
    expresieBool  ->  expresieBool . MARE_EGAL expresieBool   (rule 86)
    expresieBool  ->  expresieBool . MIC_EGAL expresieBool   (rule 87)
    expresieBool  ->  expresieBool . AND expresieBool   (rule 88)
    expresieBool  ->  expresieBool . OR expresieBool   (rule 89)

    NEG 	shift, and go to state 57
    EGAL	shift, and go to state 58
    MAI_MIC	shift, and go to state 59
    MIC_EGAL	shift, and go to state 60
    MAI_MARE	shift, and go to state 61
    MARE_EGAL	shift, and go to state 62
    AND 	shift, and go to state 63
    OR  	shift, and go to state 64
    ';' 	shift, and go to state 266



state 254

    bloc  ->  bloc STRCMP ID ',' ID . ';'   (rule 45)

    ';' 	shift, and go to state 267



state 255

    bloc  ->  bloc STRCPY ID ',' ID . ';'   (rule 46)

    ';' 	shift, and go to state 268



state 256

    bloc  ->  bloc STRCAT ID ',' ID . ';'   (rule 47)

    ';' 	shift, and go to state 269



state 257

    local  ->  tipVar ID @12 '@' ASSIGN . expresieComplexa ';'   (rule 58)

    ID  	shift, and go to state 66
    ID_FUNCTIE	shift, and go to state 6
    INTEGER_VALOARE	shift, and go to state 40
    FLOAT_VALOARE	shift, and go to state 41
    '(' 	shift, and go to state 67

    apelF	go to state 68
    expresieComplexa	go to state 270
    VALOARE_NUMERICA	go to state 70



state 258

    blocsecure  ->  tipVar ID @5 '@' ASSIGN expresieComplexa ';' .   (rule 27)

    $default	reduce using rule 27 (blocsecure)



state 259

    blocsecure  ->  tipVar ID_FUNCTIE @7 '(' listaParametriiDF ')' START_FUN . bloc END_FUN   (rule 35)

    STRCMP	shift, and go to state 143
    STRCPY	shift, and go to state 144
    STRCAT	shift, and go to state 145
    RETURN	shift, and go to state 146
    IF  	shift, and go to state 147
    WHILE	shift, and go to state 148
    FOR 	shift, and go to state 149
    FLOAT	shift, and go to state 2
    INT 	shift, and go to state 3
    VOID	shift, and go to state 4
    ID  	shift, and go to state 150
    ID_FUNCTIE	shift, and go to state 6
    BOOL	shift, and go to state 151
    STRING	shift, and go to state 152
    ';' 	shift, and go to state 153

    bloc	go to state 271
    apelF	go to state 155
    local	go to state 156
    ifWhileFor	go to state 157
    instructiuneIf	go to state 158
    instructiuneWhile	go to state 159
    instructiuneFor	go to state 160
    tipVar	go to state 161



state 260

    constructor  ->  CONSTRUCT '(' listaParametriiDF ')' START_FUN bloc END_FUN .   (rule 22)

    $default	reduce using rule 22 (constructor)



state 261

    local  ->  RETURN @14 '(' expresieComplexa ')' ';' .   (rule 66)

    $default	reduce using rule 66 (local)



state 262

    bloc  ->  bloc . apelF ';'   (rule 42)
    bloc  ->  bloc . local   (rule 43)
    bloc  ->  bloc . ifWhileFor   (rule 44)
    bloc  ->  bloc . STRCMP ID ',' ID ';'   (rule 45)
    bloc  ->  bloc . STRCPY ID ',' ID ';'   (rule 46)
    bloc  ->  bloc . STRCAT ID ',' ID ';'   (rule 47)
    instructiuneIf  ->  IF '(' expresieBool ')' START bloc . END ELSE START bloc END   (rule 75)
    instructiuneIf  ->  IF '(' expresieBool ')' START bloc . END   (rule 76)

    STRCMP	shift, and go to state 185
    STRCPY	shift, and go to state 186
    STRCAT	shift, and go to state 187
    RETURN	shift, and go to state 146
    IF  	shift, and go to state 147
    WHILE	shift, and go to state 148
    FOR 	shift, and go to state 149
    END 	shift, and go to state 272
    FLOAT	shift, and go to state 2
    INT 	shift, and go to state 3
    VOID	shift, and go to state 4
    ID  	shift, and go to state 150
    ID_FUNCTIE	shift, and go to state 6
    BOOL	shift, and go to state 151
    STRING	shift, and go to state 152
    ';' 	shift, and go to state 153

    apelF	go to state 189
    local	go to state 190
    ifWhileFor	go to state 191
    instructiuneIf	go to state 158
    instructiuneWhile	go to state 159
    instructiuneFor	go to state 160
    tipVar	go to state 161



state 263

    bloc  ->  bloc . apelF ';'   (rule 42)
    bloc  ->  bloc . local   (rule 43)
    bloc  ->  bloc . ifWhileFor   (rule 44)
    bloc  ->  bloc . STRCMP ID ',' ID ';'   (rule 45)
    bloc  ->  bloc . STRCPY ID ',' ID ';'   (rule 46)
    bloc  ->  bloc . STRCAT ID ',' ID ';'   (rule 47)
    instructiuneWhile  ->  WHILE '(' expresieBool ')' START bloc . END   (rule 77)

    STRCMP	shift, and go to state 185
    STRCPY	shift, and go to state 186
    STRCAT	shift, and go to state 187
    RETURN	shift, and go to state 146
    IF  	shift, and go to state 147
    WHILE	shift, and go to state 148
    FOR 	shift, and go to state 149
    END 	shift, and go to state 273
    FLOAT	shift, and go to state 2
    INT 	shift, and go to state 3
    VOID	shift, and go to state 4
    ID  	shift, and go to state 150
    ID_FUNCTIE	shift, and go to state 6
    BOOL	shift, and go to state 151
    STRING	shift, and go to state 152
    ';' 	shift, and go to state 153

    apelF	go to state 189
    local	go to state 190
    ifWhileFor	go to state 191
    instructiuneIf	go to state 158
    instructiuneWhile	go to state 159
    instructiuneFor	go to state 160
    tipVar	go to state 161



state 264

    bloc  ->  bloc . apelF ';'   (rule 42)
    bloc  ->  bloc . local   (rule 43)
    bloc  ->  bloc . ifWhileFor   (rule 44)
    bloc  ->  bloc . STRCMP ID ',' ID ';'   (rule 45)
    bloc  ->  bloc . STRCPY ID ',' ID ';'   (rule 46)
    bloc  ->  bloc . STRCAT ID ',' ID ';'   (rule 47)
    instructiuneFor  ->  FOR '(' bloc expresieBool ';' bloc . ')' START bloc END   (rule 78)

    STRCMP	shift, and go to state 185
    STRCPY	shift, and go to state 186
    STRCAT	shift, and go to state 187
    RETURN	shift, and go to state 146
    IF  	shift, and go to state 147
    WHILE	shift, and go to state 148
    FOR 	shift, and go to state 149
    FLOAT	shift, and go to state 2
    INT 	shift, and go to state 3
    VOID	shift, and go to state 4
    ID  	shift, and go to state 150
    ID_FUNCTIE	shift, and go to state 6
    BOOL	shift, and go to state 151
    STRING	shift, and go to state 152
    ';' 	shift, and go to state 153
    ')' 	shift, and go to state 274

    apelF	go to state 189
    local	go to state 190
    ifWhileFor	go to state 191
    instructiuneIf	go to state 158
    instructiuneWhile	go to state 159
    instructiuneFor	go to state 160
    tipVar	go to state 161



state 265

    local  ->  ID @13 '@' ASSIGN expresieComplexa ';' .   (rule 61)

    $default	reduce using rule 61 (local)



state 266

    local  ->  BOOL ID ':' ASSIGN expresieBool ';' .   (rule 63)

    $default	reduce using rule 63 (local)



state 267

    bloc  ->  bloc STRCMP ID ',' ID ';' .   (rule 45)

    $default	reduce using rule 45 (bloc)



state 268

    bloc  ->  bloc STRCPY ID ',' ID ';' .   (rule 46)

    $default	reduce using rule 46 (bloc)



state 269

    bloc  ->  bloc STRCAT ID ',' ID ';' .   (rule 47)

    $default	reduce using rule 47 (bloc)



state 270

    local  ->  tipVar ID @12 '@' ASSIGN expresieComplexa . ';'   (rule 58)
    expresieComplexa  ->  expresieComplexa . '+' @15 expresieComplexa   (rule 95)
    expresieComplexa  ->  expresieComplexa . '-' @16 expresieComplexa   (rule 97)
    expresieComplexa  ->  expresieComplexa . '*' @17 expresieComplexa   (rule 99)
    expresieComplexa  ->  expresieComplexa . '/' @18 expresieComplexa   (rule 101)

    '+' 	shift, and go to state 93
    '-' 	shift, and go to state 94
    '*' 	shift, and go to state 95
    '/' 	shift, and go to state 96
    ';' 	shift, and go to state 275



state 271

    blocsecure  ->  tipVar ID_FUNCTIE @7 '(' listaParametriiDF ')' START_FUN bloc . END_FUN   (rule 35)
    bloc  ->  bloc . apelF ';'   (rule 42)
    bloc  ->  bloc . local   (rule 43)
    bloc  ->  bloc . ifWhileFor   (rule 44)
    bloc  ->  bloc . STRCMP ID ',' ID ';'   (rule 45)
    bloc  ->  bloc . STRCPY ID ',' ID ';'   (rule 46)
    bloc  ->  bloc . STRCAT ID ',' ID ';'   (rule 47)

    STRCMP	shift, and go to state 185
    STRCPY	shift, and go to state 186
    STRCAT	shift, and go to state 187
    RETURN	shift, and go to state 146
    IF  	shift, and go to state 147
    WHILE	shift, and go to state 148
    FOR 	shift, and go to state 149
    END_FUN	shift, and go to state 276
    FLOAT	shift, and go to state 2
    INT 	shift, and go to state 3
    VOID	shift, and go to state 4
    ID  	shift, and go to state 150
    ID_FUNCTIE	shift, and go to state 6
    BOOL	shift, and go to state 151
    STRING	shift, and go to state 152
    ';' 	shift, and go to state 153

    apelF	go to state 189
    local	go to state 190
    ifWhileFor	go to state 191
    instructiuneIf	go to state 158
    instructiuneWhile	go to state 159
    instructiuneFor	go to state 160
    tipVar	go to state 161



state 272

    instructiuneIf  ->  IF '(' expresieBool ')' START bloc END . ELSE START bloc END   (rule 75)
    instructiuneIf  ->  IF '(' expresieBool ')' START bloc END .   (rule 76)

    ELSE	shift, and go to state 277

    $default	reduce using rule 76 (instructiuneIf)



state 273

    instructiuneWhile  ->  WHILE '(' expresieBool ')' START bloc END .   (rule 77)

    $default	reduce using rule 77 (instructiuneWhile)



state 274

    instructiuneFor  ->  FOR '(' bloc expresieBool ';' bloc ')' . START bloc END   (rule 78)

    START	shift, and go to state 278



state 275

    local  ->  tipVar ID @12 '@' ASSIGN expresieComplexa ';' .   (rule 58)

    $default	reduce using rule 58 (local)



state 276

    blocsecure  ->  tipVar ID_FUNCTIE @7 '(' listaParametriiDF ')' START_FUN bloc END_FUN .   (rule 35)

    $default	reduce using rule 35 (blocsecure)



state 277

    instructiuneIf  ->  IF '(' expresieBool ')' START bloc END ELSE . START bloc END   (rule 75)

    START	shift, and go to state 279



state 278

    instructiuneFor  ->  FOR '(' bloc expresieBool ';' bloc ')' START . bloc END   (rule 78)

    STRCMP	shift, and go to state 143
    STRCPY	shift, and go to state 144
    STRCAT	shift, and go to state 145
    RETURN	shift, and go to state 146
    IF  	shift, and go to state 147
    WHILE	shift, and go to state 148
    FOR 	shift, and go to state 149
    FLOAT	shift, and go to state 2
    INT 	shift, and go to state 3
    VOID	shift, and go to state 4
    ID  	shift, and go to state 150
    ID_FUNCTIE	shift, and go to state 6
    BOOL	shift, and go to state 151
    STRING	shift, and go to state 152
    ';' 	shift, and go to state 153

    bloc	go to state 280
    apelF	go to state 155
    local	go to state 156
    ifWhileFor	go to state 157
    instructiuneIf	go to state 158
    instructiuneWhile	go to state 159
    instructiuneFor	go to state 160
    tipVar	go to state 161



state 279

    instructiuneIf  ->  IF '(' expresieBool ')' START bloc END ELSE START . bloc END   (rule 75)

    STRCMP	shift, and go to state 143
    STRCPY	shift, and go to state 144
    STRCAT	shift, and go to state 145
    RETURN	shift, and go to state 146
    IF  	shift, and go to state 147
    WHILE	shift, and go to state 148
    FOR 	shift, and go to state 149
    FLOAT	shift, and go to state 2
    INT 	shift, and go to state 3
    VOID	shift, and go to state 4
    ID  	shift, and go to state 150
    ID_FUNCTIE	shift, and go to state 6
    BOOL	shift, and go to state 151
    STRING	shift, and go to state 152
    ';' 	shift, and go to state 153

    bloc	go to state 281
    apelF	go to state 155
    local	go to state 156
    ifWhileFor	go to state 157
    instructiuneIf	go to state 158
    instructiuneWhile	go to state 159
    instructiuneFor	go to state 160
    tipVar	go to state 161



state 280

    bloc  ->  bloc . apelF ';'   (rule 42)
    bloc  ->  bloc . local   (rule 43)
    bloc  ->  bloc . ifWhileFor   (rule 44)
    bloc  ->  bloc . STRCMP ID ',' ID ';'   (rule 45)
    bloc  ->  bloc . STRCPY ID ',' ID ';'   (rule 46)
    bloc  ->  bloc . STRCAT ID ',' ID ';'   (rule 47)
    instructiuneFor  ->  FOR '(' bloc expresieBool ';' bloc ')' START bloc . END   (rule 78)

    STRCMP	shift, and go to state 185
    STRCPY	shift, and go to state 186
    STRCAT	shift, and go to state 187
    RETURN	shift, and go to state 146
    IF  	shift, and go to state 147
    WHILE	shift, and go to state 148
    FOR 	shift, and go to state 149
    END 	shift, and go to state 282
    FLOAT	shift, and go to state 2
    INT 	shift, and go to state 3
    VOID	shift, and go to state 4
    ID  	shift, and go to state 150
    ID_FUNCTIE	shift, and go to state 6
    BOOL	shift, and go to state 151
    STRING	shift, and go to state 152
    ';' 	shift, and go to state 153

    apelF	go to state 189
    local	go to state 190
    ifWhileFor	go to state 191
    instructiuneIf	go to state 158
    instructiuneWhile	go to state 159
    instructiuneFor	go to state 160
    tipVar	go to state 161



state 281

    bloc  ->  bloc . apelF ';'   (rule 42)
    bloc  ->  bloc . local   (rule 43)
    bloc  ->  bloc . ifWhileFor   (rule 44)
    bloc  ->  bloc . STRCMP ID ',' ID ';'   (rule 45)
    bloc  ->  bloc . STRCPY ID ',' ID ';'   (rule 46)
    bloc  ->  bloc . STRCAT ID ',' ID ';'   (rule 47)
    instructiuneIf  ->  IF '(' expresieBool ')' START bloc END ELSE START bloc . END   (rule 75)

    STRCMP	shift, and go to state 185
    STRCPY	shift, and go to state 186
    STRCAT	shift, and go to state 187
    RETURN	shift, and go to state 146
    IF  	shift, and go to state 147
    WHILE	shift, and go to state 148
    FOR 	shift, and go to state 149
    END 	shift, and go to state 283
    FLOAT	shift, and go to state 2
    INT 	shift, and go to state 3
    VOID	shift, and go to state 4
    ID  	shift, and go to state 150
    ID_FUNCTIE	shift, and go to state 6
    BOOL	shift, and go to state 151
    STRING	shift, and go to state 152
    ';' 	shift, and go to state 153

    apelF	go to state 189
    local	go to state 190
    ifWhileFor	go to state 191
    instructiuneIf	go to state 158
    instructiuneWhile	go to state 159
    instructiuneFor	go to state 160
    tipVar	go to state 161



state 282

    instructiuneFor  ->  FOR '(' bloc expresieBool ';' bloc ')' START bloc END .   (rule 78)

    $default	reduce using rule 78 (instructiuneFor)



state 283

    instructiuneIf  ->  IF '(' expresieBool ')' START bloc END ELSE START bloc END .   (rule 75)

    $default	reduce using rule 75 (instructiuneIf)



state 284

    $   	go to state 285



state 285

    $default	accept
